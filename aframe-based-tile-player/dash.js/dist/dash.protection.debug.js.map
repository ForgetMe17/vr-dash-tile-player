{
  "version": 3,
  "sources": [
    "..\\node_modules\\browserify\\node_modules\\browser-pack\\_prelude.js",
    "core\\Utils.js",
    "core\\errors\\ErrorsBase.js",
    "core\\events\\EventsBase.js",
    "streaming\\constants\\ProtectionConstants.js",
    "streaming\\protection\\CommonEncryption.js",
    "streaming\\protection\\Protection.js",
    "streaming\\protection\\ProtectionEvents.js",
    "streaming\\protection\\controllers\\ProtectionController.js",
    "streaming\\protection\\controllers\\ProtectionKeyController.js",
    "streaming\\protection\\drm\\KeySystemClearKey.js",
    "streaming\\protection\\drm\\KeySystemPlayReady.js",
    "streaming\\protection\\drm\\KeySystemW3CClearKey.js",
    "streaming\\protection\\drm\\KeySystemWidevine.js",
    "streaming\\protection\\errors\\ProtectionErrors.js",
    "streaming\\protection\\models\\ProtectionModel_01b.js",
    "streaming\\protection\\models\\ProtectionModel_21Jan2015.js",
    "streaming\\protection\\models\\ProtectionModel_3Feb2014.js",
    "streaming\\protection\\servers\\ClearKey.js",
    "streaming\\protection\\servers\\DRMToday.js",
    "streaming\\protection\\servers\\PlayReady.js",
    "streaming\\protection\\servers\\Widevine.js",
    "streaming\\protection\\vo\\ClearKeyKeySet.js",
    "streaming\\protection\\vo\\KeyMessage.js",
    "streaming\\protection\\vo\\KeyPair.js",
    "streaming\\protection\\vo\\KeySystemAccess.js",
    "streaming\\protection\\vo\\KeySystemConfiguration.js",
    "streaming\\protection\\vo\\LicenseRequest.js",
    "streaming\\protection\\vo\\LicenseResponse.js",
    "streaming\\protection\\vo\\MediaCapability.js",
    "streaming\\protection\\vo\\NeedKey.js",
    "streaming\\vo\\DashJSError.js",
    "streaming\\vo\\metrics\\HTTPRequest.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\n\r\nclass Utils {\r\n    static mixin(dest, source, copy) {\r\n        let s;\r\n        let empty = {};\r\n        if (dest) {\r\n            for (let name in source) {\r\n                if (source.hasOwnProperty(name)) {\r\n                    s = source[name];\r\n                    if (!(name in dest) || (dest[name] !== s && (!(name in empty) || empty[name] !== s))) {\r\n                        if (typeof dest[name] === 'object' && dest[name] !== null) {\r\n                            dest[name] = Utils.mixin(dest[name], s, copy);\r\n                        } else {\r\n                            dest[name] = copy(s);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return dest;\r\n    }\r\n\r\n    static clone(src) {\r\n        if (!src || typeof src !== 'object') {\r\n            return src; // anything\r\n        }\r\n        let r;\r\n        if (src instanceof Array) {\r\n            // array\r\n            r = [];\r\n            for (let i = 0, l = src.length; i < l; ++i) {\r\n                if (i in src) {\r\n                    r.push(Utils.clone(src[i]));\r\n                }\r\n            }\r\n        } else {\r\n            r = {};\r\n        }\r\n        return Utils.mixin(r, src, Utils.clone);\r\n    }\r\n\r\n    static addAditionalQueryParameterToUrl(url, params) {\r\n        try {\r\n            if (!params || params.length === 0) {\r\n                return url;\r\n            }\r\n\r\n            let modifiedUrl = new URL(url);\r\n\r\n            params.forEach((param) => {\r\n                if (param.key && param.value) {\r\n                    modifiedUrl.searchParams.set(param.key, param.value);\r\n                }\r\n            });\r\n\r\n            return modifiedUrl.href;\r\n\r\n\r\n        } catch (e) {\r\n            return url;\r\n        }\r\n    }\r\n\r\n    static parseHttpHeaders (headerStr) {\r\n        let headers = {};\r\n        if (!headerStr) {\r\n            return headers;\r\n        }\r\n\r\n        // Trim headerStr to fix a MS Edge bug with xhr.getAllResponseHeaders method\r\n        // which send a string starting with a \"\\n\" character\r\n        let headerPairs = headerStr.trim().split('\\u000d\\u000a');\r\n        for (let i = 0, ilen = headerPairs.length; i < ilen; i++) {\r\n            let headerPair = headerPairs[i];\r\n            let index = headerPair.indexOf('\\u003a\\u0020');\r\n            if (index > 0) {\r\n                headers[headerPair.substring(0, index)] = headerPair.substring(index + 2);\r\n            }\r\n        }\r\n        return headers;\r\n    }\r\n\r\n    static generateUuid() {\r\n        let dt = new Date().getTime();\r\n        const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            const r = (dt + Math.random() * 16) % 16 | 0;\r\n            dt = Math.floor(dt / 16);\r\n            return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n        });\r\n        return uuid;\r\n    }\r\n\r\n    static generateHashCode(string) {\r\n        let hash = 0;\r\n\r\n        if (string.length === 0) {\r\n            return hash;\r\n        }\r\n\r\n        for (let i = 0; i < string.length; i++) {\r\n            const chr = string.charCodeAt(i);\r\n            hash = ((hash << 5) - hash) + chr;\r\n            hash |= 0;\r\n        }\r\n        return hash;\r\n    }\r\n}\r\n\r\nexport default Utils;\r\n",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass ErrorsBase {\r\n    extend (errors, config) {\r\n        if (!errors) return;\r\n\r\n        let override = config ? config.override : false;\r\n        let publicOnly = config ? config.publicOnly : false;\r\n\r\n\r\n        for (const err in errors) {\r\n            if (!errors.hasOwnProperty(err) || (this[err] && !override)) continue;\r\n            if (publicOnly && errors[err].indexOf('public_') === -1) continue;\r\n            this[err] = errors[err];\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default ErrorsBase;",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass EventsBase {\r\n    extend (events, config) {\r\n        if (!events) return;\r\n\r\n        let override = config ? config.override : false;\r\n        let publicOnly = config ? config.publicOnly : false;\r\n\r\n\r\n        for (const evt in events) {\r\n            if (!events.hasOwnProperty(evt) || (this[evt] && !override)) continue;\r\n            if (publicOnly && events[evt].indexOf('public_') === -1) continue;\r\n            this[evt] = events[evt];\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default EventsBase;",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Protection Constants declaration\r\n * @class\r\n * @ignore\r\n */\r\nclass ProtectionConstants {\r\n\r\n    init () {\r\n        this.CLEARKEY_KEYSTEM_STRING = 'org.w3.clearkey';\r\n        this.WIDEVINE_KEYSTEM_STRING = 'com.widevine.alpha';\r\n        this.PLAYREADY_KEYSTEM_STRING = 'com.microsoft.playready';\r\n    }\r\n\r\n    constructor () {\r\n        this.init();\r\n    }\r\n}\r\n\r\nlet constants = new ProtectionConstants();\r\nexport default constants;\r\n",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass CommonEncryption {\r\n    /**\r\n     * Find and return the ContentProtection element in the given array\r\n     * that indicates support for MPEG Common Encryption\r\n     *\r\n     * @param {Array} cpArray array of content protection elements\r\n     * @returns {Object|null} the Common Encryption content protection element or\r\n     * null if one was not found\r\n     */\r\n    static findCencContentProtection(cpArray) {\r\n        let retVal = null;\r\n        for (let i = 0; i < cpArray.length; ++i) {\r\n            let cp = cpArray[i];\r\n            if (cp.schemeIdUri.toLowerCase() === 'urn:mpeg:dash:mp4protection:2011' &&\r\n                (cp.value.toLowerCase() === 'cenc' || cp.value.toLowerCase() === 'cbcs'))\r\n                retVal = cp;\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    /**\r\n     * Returns just the data portion of a single PSSH\r\n     *\r\n     * @param {ArrayBuffer} pssh - the PSSH\r\n     * @return {ArrayBuffer} data portion of the PSSH\r\n     */\r\n    static getPSSHData(pssh) {\r\n        let offset = 8; // Box size and type fields\r\n        let view = new DataView(pssh);\r\n\r\n        // Read version\r\n        let version = view.getUint8(offset);\r\n\r\n        offset += 20; // Version (1), flags (3), system ID (16)\r\n\r\n        if (version > 0) {\r\n            offset += 4 + (16 * view.getUint32(offset)); // Key ID count (4) and All key IDs (16*count)\r\n        }\r\n\r\n        offset += 4; // Data size\r\n        return pssh.slice(offset);\r\n    }\r\n\r\n    /**\r\n     * Returns the PSSH associated with the given key system from the concatenated\r\n     * list of PSSH boxes in the given initData\r\n     *\r\n     * @param {KeySystem} keySystem the desired\r\n     * key system\r\n     * @param {ArrayBuffer} initData 'cenc' initialization data.  Concatenated list of PSSH.\r\n     * @returns {ArrayBuffer|null} The PSSH box data corresponding to the given key system, null if not found\r\n     * or null if a valid association could not be found.\r\n     */\r\n    static getPSSHForKeySystem(keySystem, initData) {\r\n        let psshList = CommonEncryption.parsePSSHList(initData);\r\n        if (keySystem && psshList.hasOwnProperty(keySystem.uuid.toLowerCase())) {\r\n            return psshList[keySystem.uuid.toLowerCase()];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Parse a standard common encryption PSSH which contains a simple\r\n     * base64-encoding of the init data\r\n     *\r\n     * @param {Object} cpData the ContentProtection element\r\n     * @param {BASE64} BASE64 reference\r\n     * @returns {ArrayBuffer|null} the init data or null if not found\r\n     */\r\n    static parseInitDataFromContentProtection(cpData, BASE64) {\r\n        if ('pssh' in cpData) {\r\n\r\n            // Remove whitespaces and newlines from pssh text\r\n            cpData.pssh.__text = cpData.pssh.__text.replace(/\\r?\\n|\\r/g, '').replace(/\\s+/g, '');\r\n\r\n            return BASE64.decodeArray(cpData.pssh.__text).buffer;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Parses list of PSSH boxes into keysystem-specific PSSH data\r\n     *\r\n     * @param {ArrayBuffer} data - the concatenated list of PSSH boxes as provided by\r\n     * CDM as initialization data when CommonEncryption content is detected\r\n     * @returns {Object|Array} an object that has a property named according to each of\r\n     * the detected key system UUIDs (e.g. 00000000-0000-0000-0000-0000000000)\r\n     * and a ArrayBuffer (the entire PSSH box) as the property value\r\n     */\r\n    static parsePSSHList(data) {\r\n\r\n        if (data === null || data === undefined)\r\n            return [];\r\n\r\n        let dv = new DataView(data.buffer || data); // data.buffer first for Uint8Array support\r\n        let done = false;\r\n        let pssh = {};\r\n\r\n        // TODO: Need to check every data read for end of buffer\r\n        let byteCursor = 0;\r\n        while (!done) {\r\n\r\n            let size,\r\n                nextBox,\r\n                version,\r\n                systemID,\r\n                psshDataSize;\r\n            let boxStart = byteCursor;\r\n\r\n            if (byteCursor >= dv.buffer.byteLength)\r\n                break;\r\n\r\n            /* Box size */\r\n            size = dv.getUint32(byteCursor);\r\n            nextBox = byteCursor + size;\r\n            byteCursor += 4;\r\n\r\n            /* Verify PSSH */\r\n            if (dv.getUint32(byteCursor) !== 0x70737368) {\r\n                byteCursor = nextBox;\r\n                continue;\r\n            }\r\n            byteCursor += 4;\r\n\r\n            /* Version must be 0 or 1 */\r\n            version = dv.getUint8(byteCursor);\r\n            if (version !== 0 && version !== 1) {\r\n                byteCursor = nextBox;\r\n                continue;\r\n            }\r\n            byteCursor++;\r\n\r\n            byteCursor += 3; /* skip flags */\r\n\r\n            // 16-byte UUID/SystemID\r\n            systemID = '';\r\n            let i, val;\r\n            for (i = 0; i < 4; i++) {\r\n                val = dv.getUint8(byteCursor + i).toString(16);\r\n                systemID += (val.length === 1) ? '0' + val : val;\r\n            }\r\n            byteCursor += 4;\r\n            systemID += '-';\r\n            for (i = 0; i < 2; i++) {\r\n                val = dv.getUint8(byteCursor + i).toString(16);\r\n                systemID += (val.length === 1) ? '0' + val : val;\r\n            }\r\n            byteCursor += 2;\r\n            systemID += '-';\r\n            for (i = 0; i < 2; i++) {\r\n                val = dv.getUint8(byteCursor + i).toString(16);\r\n                systemID += (val.length === 1) ? '0' + val : val;\r\n            }\r\n            byteCursor += 2;\r\n            systemID += '-';\r\n            for (i = 0; i < 2; i++) {\r\n                val = dv.getUint8(byteCursor + i).toString(16);\r\n                systemID += (val.length === 1) ? '0' + val : val;\r\n            }\r\n            byteCursor += 2;\r\n            systemID += '-';\r\n            for (i = 0; i < 6; i++) {\r\n                val = dv.getUint8(byteCursor + i).toString(16);\r\n                systemID += (val.length === 1) ? '0' + val : val;\r\n            }\r\n            byteCursor += 6;\r\n\r\n            systemID = systemID.toLowerCase();\r\n\r\n            /* PSSH Data Size */\r\n            psshDataSize = dv.getUint32(byteCursor);\r\n            byteCursor += 4;\r\n\r\n            /* PSSH Data */\r\n            pssh[systemID] = dv.buffer.slice(boxStart, nextBox);\r\n            byteCursor = nextBox;\r\n        }\r\n\r\n        return pssh;\r\n    }\r\n}\r\n\r\nexport default CommonEncryption;\r\n",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport ProtectionController from './controllers/ProtectionController';\r\nimport ProtectionKeyController from './controllers/ProtectionKeyController';\r\nimport ProtectionEvents from './ProtectionEvents';\r\nimport ProtectionErrors from './errors/ProtectionErrors';\r\nimport ProtectionModel_21Jan2015 from './models/ProtectionModel_21Jan2015';\r\nimport ProtectionModel_3Feb2014 from './models/ProtectionModel_3Feb2014';\r\nimport ProtectionModel_01b from './models/ProtectionModel_01b';\r\n\r\nconst APIS_ProtectionModel_01b = [\r\n    // Un-prefixed as per spec\r\n    {\r\n        // Video Element\r\n        generateKeyRequest: 'generateKeyRequest',\r\n        addKey: 'addKey',\r\n        cancelKeyRequest: 'cancelKeyRequest',\r\n\r\n        // Events\r\n        needkey: 'needkey',\r\n        keyerror: 'keyerror',\r\n        keyadded: 'keyadded',\r\n        keymessage: 'keymessage'\r\n    },\r\n    // Webkit-prefixed (early Chrome versions and Chrome with EME disabled in chrome://flags)\r\n    {\r\n        // Video Element\r\n        generateKeyRequest: 'webkitGenerateKeyRequest',\r\n        addKey: 'webkitAddKey',\r\n        cancelKeyRequest: 'webkitCancelKeyRequest',\r\n\r\n        // Events\r\n        needkey: 'webkitneedkey',\r\n        keyerror: 'webkitkeyerror',\r\n        keyadded: 'webkitkeyadded',\r\n        keymessage: 'webkitkeymessage'\r\n    }\r\n];\r\n\r\nconst APIS_ProtectionModel_3Feb2014 = [\r\n    // Un-prefixed as per spec\r\n    // Chrome 38-39 (and some earlier versions) with chrome://flags -- Enable Encrypted Media Extensions\r\n    {\r\n        // Video Element\r\n        setMediaKeys: 'setMediaKeys',\r\n        // MediaKeys\r\n        MediaKeys: 'MediaKeys',\r\n        // MediaKeySession\r\n        release: 'close',\r\n\r\n        // Events\r\n        needkey: 'needkey',\r\n        error: 'keyerror',\r\n        message: 'keymessage',\r\n        ready: 'keyadded',\r\n        close: 'keyclose'\r\n    },\r\n    // MS-prefixed (IE11, Windows 8.1)\r\n    {\r\n        // Video Element\r\n        setMediaKeys: 'msSetMediaKeys',\r\n        // MediaKeys\r\n        MediaKeys: 'MSMediaKeys',\r\n        // MediaKeySession\r\n        release: 'close',\r\n        // Events\r\n        needkey: 'msneedkey',\r\n        error: 'mskeyerror',\r\n        message: 'mskeymessage',\r\n        ready: 'mskeyadded',\r\n        close: 'mskeyclose'\r\n    }\r\n];\r\n\r\nfunction Protection() {\r\n    let instance;\r\n    const context = this.context;\r\n\r\n    /**\r\n     * Create a ProtectionController and associated ProtectionModel for use with\r\n     * a single piece of content.\r\n     *\r\n     * @param {Object} config\r\n     * @return {ProtectionController} protection controller\r\n     *\r\n     */\r\n    function createProtectionSystem(config) {\r\n        let controller = null;\r\n\r\n        const protectionKeyController = ProtectionKeyController(context).getInstance();\r\n        protectionKeyController.setConfig({ debug: config.debug, BASE64: config.BASE64 });\r\n        protectionKeyController.initialize();\r\n\r\n        let protectionModel =  getProtectionModel(config);\r\n\r\n        if (!controller && protectionModel) {//TODO add ability to set external controller if still needed at all?\r\n            controller = ProtectionController(context).create({\r\n                protectionModel: protectionModel,\r\n                protectionKeyController: protectionKeyController,\r\n                eventBus: config.eventBus,\r\n                debug: config.debug,\r\n                events: config.events,\r\n                BASE64: config.BASE64,\r\n                constants: config.constants,\r\n                cmcdModel: config.cmcdModel\r\n            });\r\n            config.capabilities.setEncryptedMediaSupported(true);\r\n        }\r\n        return controller;\r\n    }\r\n\r\n    function getProtectionModel(config) {\r\n        const debug = config.debug;\r\n        const logger = debug.getLogger(instance);\r\n        const eventBus = config.eventBus;\r\n        const errHandler = config.errHandler;\r\n        const videoElement = config.videoModel ? config.videoModel.getElement() : null;\r\n\r\n        if ((!videoElement || videoElement.onencrypted !== undefined) &&\r\n            (!videoElement || videoElement.mediaKeys !== undefined)) {\r\n            logger.info('EME detected on this user agent! (ProtectionModel_21Jan2015)');\r\n            return ProtectionModel_21Jan2015(context).create({ debug: debug, eventBus: eventBus, events: config.events });\r\n        } else if (getAPI(videoElement, APIS_ProtectionModel_3Feb2014)) {\r\n            logger.info('EME detected on this user agent! (ProtectionModel_3Feb2014)');\r\n            return ProtectionModel_3Feb2014(context).create({ debug: debug, eventBus: eventBus, events: config.events, api: getAPI(videoElement, APIS_ProtectionModel_3Feb2014) });\r\n        } else if (getAPI(videoElement, APIS_ProtectionModel_01b)) {\r\n            logger.info('EME detected on this user agent! (ProtectionModel_01b)');\r\n            return ProtectionModel_01b(context).create({ debug: debug, eventBus: eventBus, errHandler: errHandler, events: config.events, api: getAPI(videoElement, APIS_ProtectionModel_01b) });\r\n        } else {\r\n            logger.warn('No supported version of EME detected on this user agent! - Attempts to play encrypted content will fail!');\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function getAPI(videoElement, apis) {\r\n        for (let i = 0; i < apis.length; i++) {\r\n            const api = apis[i];\r\n            // detect if api is supported by browser\r\n            // check only first function in api -> should be fine\r\n            if (typeof videoElement[api[Object.keys(api)[0]]] !== 'function') {\r\n                continue;\r\n            }\r\n\r\n            return api;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    instance = {\r\n        createProtectionSystem: createProtectionSystem\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nProtection.__dashjs_factory_name = 'Protection';\r\nconst factory = dashjs.FactoryMaker.getClassFactory(Protection); /* jshint ignore:line */\r\nfactory.events = ProtectionEvents;\r\nfactory.errors = ProtectionErrors;\r\ndashjs.FactoryMaker.updateClassFactory(Protection.__dashjs_factory_name, factory); /* jshint ignore:line */\r\nexport default factory;\r\n",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport EventsBase from '../../core/events/EventsBase';\r\n/**\r\n * @class\r\n  */\r\nclass ProtectionEvents extends EventsBase {\r\n    /**\r\n     * @description Public facing external events to be used when including protection package.\r\n     * All public events will be aggregated into the MediaPlayerEvents Class and can be accessed\r\n     * via MediaPlayer.events.  public_ is the prefix that we use to move event names to MediaPlayerEvents.\r\n     */\r\n    constructor () {\r\n        super();\r\n\r\n        /**\r\n         * Event ID for events delivered when the protection set receives\r\n         * a key message from the CDM\r\n         *\r\n         * @ignore\r\n         */\r\n        this.INTERNAL_KEY_MESSAGE = 'internalKeyMessage';\r\n\r\n        /**\r\n         * Event ID for events delivered when a key system selection procedure\r\n         * completes\r\n         * @ignore\r\n         */\r\n        this.INTERNAL_KEY_SYSTEM_SELECTED = 'internalKeySystemSelected';\r\n\r\n        /**\r\n         * Event ID for events delivered when the status of one decryption keys has changed\r\n         * @ignore\r\n         */\r\n        this.INTERNAL_KEY_STATUS_CHANGED = 'internalkeyStatusChanged';\r\n\r\n        /**\r\n         * Event ID for events delivered when a new key has been added\r\n         *\r\n         * @constant\r\n         * @deprecated The latest versions of the EME specification no longer\r\n         * use this event.  {@MediaPlayer.models.protectionModel.eventList.KEY_STATUSES_CHANGED}\r\n         * is preferred.\r\n         * @event ProtectionEvents#KEY_ADDED\r\n         */\r\n        this.KEY_ADDED = 'public_keyAdded';\r\n        /**\r\n         * Event ID for events delivered when an error is encountered by the CDM\r\n         * while processing a license server response message\r\n         * @event ProtectionEvents#KEY_ERROR\r\n         */\r\n        this.KEY_ERROR = 'public_keyError';\r\n\r\n        /**\r\n         * Event ID for events delivered when the protection set receives\r\n         * a key message from the CDM\r\n         * @event ProtectionEvents#KEY_MESSAGE\r\n         */\r\n        this.KEY_MESSAGE = 'public_keyMessage';\r\n\r\n        /**\r\n         * Event ID for events delivered when a key session close\r\n         * process has completed\r\n         * @event ProtectionEvents#KEY_SESSION_CLOSED\r\n         */\r\n        this.KEY_SESSION_CLOSED = 'public_keySessionClosed';\r\n\r\n        /**\r\n         * Event ID for events delivered when a new key sessions creation\r\n         * process has completed\r\n         * @event ProtectionEvents#KEY_SESSION_CREATED\r\n         */\r\n        this.KEY_SESSION_CREATED = 'public_keySessionCreated';\r\n\r\n        /**\r\n         * Event ID for events delivered when a key session removal\r\n         * process has completed\r\n         * @event ProtectionEvents#KEY_SESSION_REMOVED\r\n         */\r\n        this.KEY_SESSION_REMOVED = 'public_keySessionRemoved';\r\n\r\n        /**\r\n         * Event ID for events delivered when the status of one or more\r\n         * decryption keys has changed\r\n         * @event ProtectionEvents#KEY_STATUSES_CHANGED\r\n         */\r\n        this.KEY_STATUSES_CHANGED = 'public_keyStatusesChanged';\r\n\r\n        /**\r\n         * Event ID for events delivered when a key system access procedure\r\n         * has completed\r\n         * @ignore\r\n         */\r\n        this.KEY_SYSTEM_ACCESS_COMPLETE = 'public_keySystemAccessComplete';\r\n\r\n        /**\r\n         * Event ID for events delivered when a key system selection procedure\r\n         * completes\r\n         * @event ProtectionEvents#KEY_SYSTEM_SELECTED\r\n         */\r\n        this.KEY_SYSTEM_SELECTED = 'public_keySystemSelected';\r\n\r\n        /**\r\n         * Event ID for events delivered when a license request procedure\r\n         * has completed\r\n         * @event ProtectionEvents#LICENSE_REQUEST_COMPLETE\r\n         */\r\n        this.LICENSE_REQUEST_COMPLETE = 'public_licenseRequestComplete';\r\n\r\n        /**\r\n         * Sending a license rquest\r\n         * @event ProtectionEvents#LICENSE_REQUEST_SENDING\r\n         */\r\n        this.LICENSE_REQUEST_SENDING = 'public_licenseRequestSending';\r\n\r\n        /**\r\n         * Event ID for needkey/encrypted events\r\n         * @ignore\r\n         */\r\n        this.NEED_KEY = 'needkey';\r\n\r\n        /**\r\n         * Event ID for events delivered when the Protection system is detected and created.\r\n         * @event ProtectionEvents#PROTECTION_CREATED\r\n         */\r\n        this.PROTECTION_CREATED = 'public_protectioncreated';\r\n\r\n        /**\r\n         * Event ID for events delivered when the Protection system is destroyed.\r\n         * @event ProtectionEvents#PROTECTION_DESTROYED\r\n         */\r\n        this.PROTECTION_DESTROYED = 'public_protectiondestroyed';\r\n\r\n        /**\r\n         * Event ID for events delivered when a new server certificate has\r\n         * been delivered to the CDM\r\n         * @ignore\r\n         */\r\n        this.SERVER_CERTIFICATE_UPDATED = 'serverCertificateUpdated';\r\n\r\n        /**\r\n         * Event ID for events delivered when the process of shutting down\r\n         * a protection set has completed\r\n         * @ignore\r\n         */\r\n        this.TEARDOWN_COMPLETE =  'protectionTeardownComplete';\r\n\r\n        /**\r\n         * Event ID for events delivered when a HTMLMediaElement has been\r\n         * associated with the protection set\r\n         * @ignore\r\n         */\r\n        this.VIDEO_ELEMENT_SELECTED = 'videoElementSelected';\r\n    }\r\n}\r\n\r\nlet protectionEvents = new ProtectionEvents();\r\nexport default protectionEvents;\r\n",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport CommonEncryption from '../CommonEncryption';\r\nimport MediaCapability from '../vo/MediaCapability';\r\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration';\r\nimport ProtectionErrors from '../errors/ProtectionErrors';\r\nimport DashJSError from '../../vo/DashJSError';\r\nimport LicenseRequest from '../vo/LicenseRequest';\r\nimport LicenseResponse from '../vo/LicenseResponse';\r\nimport { HTTPRequest } from '../../vo/metrics/HTTPRequest';\r\nimport Utils from '../../../core/Utils';\r\n\r\nconst NEEDKEY_BEFORE_INITIALIZE_RETRIES = 5;\r\nconst NEEDKEY_BEFORE_INITIALIZE_TIMEOUT = 500;\r\n\r\nconst LICENSE_SERVER_REQUEST_RETRIES = 3;\r\nconst LICENSE_SERVER_REQUEST_RETRY_INTERVAL = 1000;\r\nconst LICENSE_SERVER_REQUEST_DEFAULT_TIMEOUT = 8000;\r\n\r\n/**\r\n * @module ProtectionController\r\n * @description Provides access to media protection information and functionality.  Each\r\n * ProtectionController manages a single {@link MediaPlayer.models.ProtectionModel}\r\n * which encapsulates a set of protection information (EME APIs, selected key system,\r\n * key sessions).  The APIs of ProtectionController mostly align with the latest EME\r\n * APIs.  Key system selection is mostly automated when combined with app-overrideable\r\n * functionality provided in {@link ProtectionKeyController}.\r\n * @todo ProtectionController does almost all of its tasks automatically after init() is\r\n * called.  Applications might want more control over this process and want to go through\r\n * each step manually (key system selection, session creation, session maintenance).\r\n * @param {Object} config\r\n */\r\n\r\nfunction ProtectionController(config) {\r\n\r\n    config = config || {};\r\n    const protectionKeyController = config.protectionKeyController;\r\n    let protectionModel = config.protectionModel;\r\n    const eventBus = config.eventBus;\r\n    const events = config.events;\r\n    const debug = config.debug;\r\n    const BASE64 = config.BASE64;\r\n    const constants = config.constants;\r\n    let needkeyRetries = [];\r\n    const cmcdModel = config.cmcdModel;\r\n\r\n    let instance,\r\n        logger,\r\n        pendingNeedKeyData,\r\n        mediaInfoArr,\r\n        protDataSet,\r\n        sessionType,\r\n        robustnessLevel,\r\n        keySystem,\r\n        licenseRequestFilters,\r\n        licenseResponseFilters;\r\n\r\n    function setup() {\r\n        logger = debug.getLogger(instance);\r\n        pendingNeedKeyData = [];\r\n        mediaInfoArr = [];\r\n        sessionType = 'temporary';\r\n        robustnessLevel = '';\r\n        licenseRequestFilters = [];\r\n        licenseResponseFilters = [];\r\n    }\r\n\r\n    function checkConfig() {\r\n        if (!eventBus || !eventBus.hasOwnProperty('on') || !protectionKeyController || !protectionKeyController.hasOwnProperty('getSupportedKeySystemsFromContentProtection')) {\r\n            throw new Error('Missing config parameter(s)');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initialize this protection system with a given audio\r\n     * or video stream information.\r\n     *\r\n     * @param {StreamInfo} [mediaInfo] Media information\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @todo This API will change when we have better support for allowing applications\r\n     * to select different adaptation sets for playback.  Right now it is clunky for\r\n     * applications to create {@link StreamInfo} with the right information,\r\n     * @ignore\r\n     */\r\n    function initializeForMedia(mediaInfo) {\r\n        // Not checking here if a session for similar KS/KID combination is already created\r\n        // because still don't know which keysystem will be selected.\r\n        // Once Keysystem is selected and before creating the session, we will do that check\r\n        // so we create the strictly necessary DRM sessions\r\n        if (!mediaInfo) {\r\n            throw new Error('mediaInfo can not be null or undefined');\r\n        }\r\n\r\n        checkConfig();\r\n\r\n        eventBus.on(events.INTERNAL_KEY_MESSAGE, onKeyMessage, this);\r\n        eventBus.on(events.INTERNAL_KEY_STATUS_CHANGED, onKeyStatusChanged, this);\r\n        mediaInfoArr.push(mediaInfo);\r\n\r\n        // ContentProtection elements are specified at the AdaptationSet level, so the CP for audio\r\n        // and video will be the same.  Just use one valid MediaInfo object\r\n        const supportedKS = protectionKeyController.getSupportedKeySystemsFromContentProtection(mediaInfo.contentProtection);\r\n        if (supportedKS && supportedKS.length > 0) {\r\n            selectKeySystem(supportedKS, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes all entries from the mediaInfoArr array for a specific stream id\r\n     * @param {String} streamId\r\n     */\r\n    function clearMediaInfoArrayByStreamId(streamId) {\r\n        mediaInfoArr = mediaInfoArr.filter((mediaInfo) => {\r\n            return mediaInfo.streamInfo.id !== streamId;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Returns a set of supported key systems and CENC initialization data\r\n     * from the given array of ContentProtection elements.  Only\r\n     * key systems that are supported by this player will be returned.\r\n     * Key systems are returned in priority order (highest first).\r\n     *\r\n     * @param {Array.<Object>} cps - array of content protection elements parsed\r\n     * from the manifest\r\n     * @returns {Array.<Object>} array of objects indicating which supported key\r\n     * systems were found.  Empty array is returned if no\r\n     * supported key systems were found\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     * @ignore\r\n     */\r\n    function getSupportedKeySystemsFromContentProtection(cps) {\r\n        checkConfig();\r\n        return protectionKeyController.getSupportedKeySystemsFromContentProtection(cps);\r\n    }\r\n\r\n    /**\r\n     * Create a new key session associated with the given initialization data from\r\n     * the MPD or from the PSSH box in the media\r\n     *\r\n     * @param {ArrayBuffer} initData the initialization data\r\n     * @param {Uint8Array} cdmData the custom data to provide to licenser\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @fires ProtectionController#KeySessionCreated\r\n     * @todo In older versions of the EME spec, there was a one-to-one relationship between\r\n     * initialization data and key sessions.  That is no longer true in the latest APIs.  This\r\n     * API will need to modified (and a new \"generateRequest(keySession, initData)\" API created)\r\n     * to come up to speed with the latest EME standard\r\n     * @ignore\r\n     */\r\n    function createKeySession(initData, cdmData) {\r\n        const initDataForKS = CommonEncryption.getPSSHForKeySystem(keySystem, initData);\r\n        const protData = getProtData(keySystem);\r\n        if (initDataForKS) {\r\n\r\n            // Check for duplicate initData\r\n            if (_isInitDataDuplicate(initDataForKS)) {\r\n                return;\r\n            }\r\n\r\n            try {\r\n                protectionModel.createKeySession(initDataForKS, protData, getSessionType(keySystem), cdmData);\r\n            } catch (error) {\r\n                eventBus.trigger(events.KEY_SESSION_CREATED, {\r\n                    data: null,\r\n                    error: new DashJSError(ProtectionErrors.KEY_SESSION_CREATED_ERROR_CODE, ProtectionErrors.KEY_SESSION_CREATED_ERROR_MESSAGE + error.message)\r\n                });\r\n            }\r\n        } else if (initData) {\r\n            protectionModel.createKeySession(initData, protData, getSessionType(keySystem), cdmData);\r\n        } else {\r\n            eventBus.trigger(events.KEY_SESSION_CREATED, {\r\n                data: null,\r\n                error: new DashJSError(ProtectionErrors.KEY_SESSION_CREATED_ERROR_CODE, ProtectionErrors.KEY_SESSION_CREATED_ERROR_MESSAGE + 'Selected key system is ' + (keySystem ? keySystem.systemString : null) + '.  needkey/encrypted event contains no initData corresponding to that key system!')\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if the provided init data is equal to one of the existing init data values\r\n     * @param {any} initDataForKS\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    function _isInitDataDuplicate(initDataForKS) {\r\n\r\n        if (!initDataForKS) {\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            const currentInitData = protectionModel.getAllInitData();\r\n            for (let i = 0; i < currentInitData.length; i++) {\r\n                if (protectionKeyController.initDataEquals(initDataForKS, currentInitData[i])) {\r\n                    logger.debug('DRM: Ignoring initData because we have already seen it!');\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Loads a key session with the given session ID from persistent storage.  This\r\n     * essentially creates a new key session\r\n     *\r\n     * @param {string} sessionID\r\n     * @param {string} initData\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @fires ProtectionController#KeySessionCreated\r\n     * @ignore\r\n     */\r\n    function loadKeySession(sessionID, initData) {\r\n        checkConfig();\r\n        protectionModel.loadKeySession(sessionID, initData, getSessionType(keySystem));\r\n    }\r\n\r\n    /**\r\n     * Removes the given key session from persistent storage and closes the session\r\n     * as if {@link ProtectionController#closeKeySession}\r\n     * was called\r\n     *\r\n     * @param {SessionToken} sessionToken the session\r\n     * token\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @fires ProtectionController#KeySessionRemoved\r\n     * @fires ProtectionController#KeySessionClosed\r\n     * @ignore\r\n     */\r\n    function removeKeySession(sessionToken) {\r\n        checkConfig();\r\n        protectionModel.removeKeySession(sessionToken);\r\n    }\r\n\r\n    /**\r\n     * Closes the key session and releases all associated decryption keys.  These\r\n     * keys will no longer be available for decrypting media\r\n     *\r\n     * @param {SessionToken} sessionToken the session\r\n     * token\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @fires ProtectionController#KeySessionClosed\r\n     * @ignore\r\n     */\r\n    function closeKeySession(sessionToken) {\r\n        checkConfig();\r\n        protectionModel.closeKeySession(sessionToken);\r\n    }\r\n\r\n    /**\r\n     * Sets a server certificate for use by the CDM when signing key messages\r\n     * intended for a particular license server.  This will fire\r\n     * an error event if a key system has not yet been selected.\r\n     *\r\n     * @param {ArrayBuffer} serverCertificate a CDM-specific license server\r\n     * certificate\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @fires ProtectionController#ServerCertificateUpdated\r\n     */\r\n    function setServerCertificate(serverCertificate) {\r\n        checkConfig();\r\n        protectionModel.setServerCertificate(serverCertificate);\r\n    }\r\n\r\n    /**\r\n     * Associate this protection system with the given HTMLMediaElement.  This\r\n     * causes the system to register for needkey/encrypted events from the given\r\n     * element and provides a destination for setting of MediaKeys\r\n     *\r\n     * @param {HTMLMediaElement} element the media element to which the protection\r\n     * system should be associated\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     */\r\n    function setMediaElement(element) {\r\n        checkConfig();\r\n        if (element) {\r\n            protectionModel.setMediaElement(element);\r\n            eventBus.on(events.NEED_KEY, onNeedKey, this);\r\n        } else if (element === null) {\r\n            protectionModel.setMediaElement(element);\r\n            eventBus.off(events.NEED_KEY, onNeedKey, this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the session type to use when creating key sessions.  Either \"temporary\" or\r\n     * \"persistent-license\".  Default is \"temporary\".\r\n     *\r\n     * @param {string} value the session type\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     */\r\n    function setSessionType(value) {\r\n        sessionType = value;\r\n    }\r\n\r\n    /**\r\n     * Sets the robustness level for video and audio capabilities. Optional to remove Chrome warnings.\r\n     * Possible values are SW_SECURE_CRYPTO, SW_SECURE_DECODE, HW_SECURE_CRYPTO, HW_SECURE_CRYPTO, HW_SECURE_DECODE, HW_SECURE_ALL.\r\n     *\r\n     * @param {string} level the robustness level\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     */\r\n    function setRobustnessLevel(level) {\r\n        robustnessLevel = level;\r\n    }\r\n\r\n    /**\r\n     * Attach KeySystem-specific data to use for license acquisition with EME\r\n     *\r\n     * @param {Object} data an object containing property names corresponding to\r\n     * key system name strings (e.g. \"org.w3.clearkey\") and associated values\r\n     * being instances of {@link ProtectionData}\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @ignore\r\n     */\r\n    function setProtectionData(data) {\r\n        protDataSet = data;\r\n        protectionKeyController.setProtectionData(data);\r\n    }\r\n\r\n    /**\r\n     * Stop method is called when current playback is stopped/resetted.\r\n     *\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     */\r\n    function stop() {\r\n        if (protectionModel) {\r\n            protectionModel.stop();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Destroys all protection data associated with this protection set.  This includes\r\n     * deleting all key sessions. In the case of persistent key sessions, the sessions\r\n     * will simply be unloaded and not deleted.  Additionally, if this protection set is\r\n     * associated with a HTMLMediaElement, it will be detached from that element.\r\n     *\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @ignore\r\n     */\r\n    function reset() {\r\n        checkConfig();\r\n\r\n        licenseRequestFilters = [];\r\n        licenseResponseFilters = [];\r\n\r\n        eventBus.off(events.INTERNAL_KEY_MESSAGE, onKeyMessage, this);\r\n        eventBus.off(events.INTERNAL_KEY_STATUS_CHANGED, onKeyStatusChanged, this);\r\n\r\n        setMediaElement(null);\r\n\r\n        keySystem = undefined;\r\n\r\n        if (protectionModel) {\r\n            protectionModel.reset();\r\n            protectionModel = null;\r\n        }\r\n\r\n        needkeyRetries.forEach(retryTimeout => clearTimeout(retryTimeout));\r\n        needkeyRetries = [];\r\n\r\n        mediaInfoArr = [];\r\n    }\r\n\r\n    ///////////////\r\n    // Private\r\n    ///////////////\r\n\r\n    function getProtData(keySystem) {\r\n        let protData = null;\r\n        if (keySystem) {\r\n            const keySystemString = keySystem.systemString;\r\n\r\n            if (protDataSet) {\r\n                protData = (keySystemString in protDataSet) ? protDataSet[keySystemString] : null;\r\n            }\r\n        }\r\n        return protData;\r\n    }\r\n\r\n    function getKeySystemConfiguration(keySystem) {\r\n        const protData = getProtData(keySystem);\r\n        const audioCapabilities = [];\r\n        const videoCapabilities = [];\r\n        const audioRobustness = (protData && protData.audioRobustness && protData.audioRobustness.length > 0) ? protData.audioRobustness : robustnessLevel;\r\n        const videoRobustness = (protData && protData.videoRobustness && protData.videoRobustness.length > 0) ? protData.videoRobustness : robustnessLevel;\r\n        const ksSessionType = getSessionType(keySystem);\r\n        const distinctiveIdentifier = (protData && protData.distinctiveIdentifier) ? protData.distinctiveIdentifier : 'optional';\r\n        const persistentState = (protData && protData.persistentState) ? protData.persistentState : (ksSessionType === 'temporary') ? 'optional' : 'required';\r\n\r\n        mediaInfoArr.forEach((media) => {\r\n            if (media.type === constants.AUDIO) {\r\n                audioCapabilities.push(new MediaCapability(media.codec, audioRobustness));\r\n            } else if (media.type === constants.VIDEO) {\r\n                videoCapabilities.push(new MediaCapability(media.codec, videoRobustness));\r\n            }\r\n        });\r\n\r\n        return new KeySystemConfiguration(\r\n            audioCapabilities, videoCapabilities, distinctiveIdentifier,\r\n            persistentState,\r\n            [ksSessionType]);\r\n    }\r\n\r\n    function getSessionType(keySystem) {\r\n        const protData = getProtData(keySystem);\r\n        const ksSessionType = (protData && protData.sessionType) ? protData.sessionType : sessionType;\r\n        return ksSessionType;\r\n    }\r\n\r\n    function selectKeySystem(supportedKS, fromManifest) {\r\n\r\n        // Reorder key systems according to priority order provided in protectionData\r\n        supportedKS = supportedKS.sort((ksA, ksB) => {\r\n            let indexA = (protDataSet && protDataSet[ksA.ks.systemString] && protDataSet[ksA.ks.systemString].priority >= 0) ? protDataSet[ksA.ks.systemString].priority : supportedKS.length;\r\n            let indexB = (protDataSet && protDataSet[ksB.ks.systemString] && protDataSet[ksB.ks.systemString].priority >= 0) ? protDataSet[ksB.ks.systemString].priority : supportedKS.length;\r\n            return indexA - indexB;\r\n        });\r\n\r\n\r\n        // First time, so we need to select a key system\r\n        if (keySystem === undefined) {\r\n            _selectInitialKeySystem(supportedKS, fromManifest);\r\n        }\r\n\r\n        // We already selected a key system. we only need to trigger a new license exchange if the init data has changed\r\n        else if (keySystem) {\r\n            _selectWithExistingKeySystem(supportedKS, fromManifest);\r\n        }\r\n\r\n        // We are in the process of selecting a key system, so just save the data which might be coming from additional AdaptationSets.\r\n        else {\r\n            pendingNeedKeyData.push(supportedKS);\r\n        }\r\n    }\r\n\r\n    function _selectWithExistingKeySystem(supportedKS, fromManifest) {\r\n        const self = this;\r\n        const requestedKeySystems = [];\r\n\r\n        const ksIdx = supportedKS.findIndex((entry) => {\r\n            return entry.ks === keySystem;\r\n        });\r\n\r\n        if (ksIdx === -1 || !supportedKS[ksIdx].initData) {\r\n            return;\r\n        }\r\n\r\n        //  we only need to call this if the init data has changed\r\n        const initDataForKs = CommonEncryption.getPSSHForKeySystem(keySystem, supportedKS[ksIdx].initData);\r\n        if (_isInitDataDuplicate(initDataForKs)) {\r\n            return;\r\n        }\r\n\r\n        requestedKeySystems.push({\r\n            ks: supportedKS[ksIdx].ks,\r\n            configs: [getKeySystemConfiguration(keySystem)]\r\n        });\r\n\r\n        // Ensure that we would be granted key system access using the key\r\n        // system and codec information\r\n        const onKeySystemAccessComplete = function (event) {\r\n            eventBus.off(events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\r\n            if (event.error) {\r\n                if (!fromManifest) {\r\n                    eventBus.trigger(events.KEY_SYSTEM_SELECTED, { error: new DashJSError(ProtectionErrors.KEY_SYSTEM_ACCESS_DENIED_ERROR_CODE, ProtectionErrors.KEY_SYSTEM_ACCESS_DENIED_ERROR_MESSAGE + event.error) });\r\n                }\r\n            } else {\r\n                logger.info('DRM: KeySystem Access Granted');\r\n                eventBus.trigger(events.KEY_SYSTEM_SELECTED, { data: event.data });\r\n                const protData = getProtData(keySystem);\r\n                if (protectionKeyController.isClearKey(keySystem)) {\r\n                    // For Clearkey: if parameters for generating init data was provided by the user, use them for generating\r\n                    // initData and overwrite possible initData indicated in encrypted event (EME)\r\n                    if (protData && protData.hasOwnProperty('clearkeys')) {\r\n                        const initData = { kids: Object.keys(protData.clearkeys) };\r\n                        supportedKS[ksIdx].initData = new TextEncoder().encode(JSON.stringify(initData));\r\n                    }\r\n                }\r\n                if (supportedKS[ksIdx].sessionId) {\r\n                    // Load MediaKeySession with sessionId\r\n                    loadKeySession(supportedKS[ksIdx].sessionId, supportedKS[ksIdx].initData);\r\n                } else if (supportedKS[ksIdx].initData) {\r\n                    // Create new MediaKeySession with initData\r\n                    createKeySession(supportedKS[ksIdx].initData, supportedKS[ksIdx].cdmData);\r\n                }\r\n            }\r\n        };\r\n\r\n        eventBus.on(events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\r\n        protectionModel.requestKeySystemAccess(requestedKeySystems);\r\n    }\r\n\r\n    function _selectInitialKeySystem(supportedKS, fromManifest) {\r\n        const self = this;\r\n        const requestedKeySystems = [];\r\n        let ksIdx;\r\n\r\n        // First time through, so we need to select a key system\r\n        keySystem = null;\r\n        pendingNeedKeyData.push(supportedKS);\r\n\r\n        // Add all key systems to our request list since we have yet to select a key system\r\n        for (let i = 0; i < supportedKS.length; i++) {\r\n            requestedKeySystems.push({\r\n                ks: supportedKS[i].ks,\r\n                configs: [getKeySystemConfiguration(supportedKS[i].ks)]\r\n            });\r\n        }\r\n\r\n        let keySystemAccess;\r\n        const onKeySystemAccessComplete = function (event) {\r\n            eventBus.off(events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\r\n            if (event.error) {\r\n                keySystem = undefined;\r\n                eventBus.off(events.INTERNAL_KEY_SYSTEM_SELECTED, onKeySystemSelected, self);\r\n                if (!fromManifest) {\r\n                    eventBus.trigger(events.KEY_SYSTEM_SELECTED, {\r\n                        data: null,\r\n                        error: new DashJSError(ProtectionErrors.KEY_SYSTEM_ACCESS_DENIED_ERROR_CODE, ProtectionErrors.KEY_SYSTEM_ACCESS_DENIED_ERROR_MESSAGE + event.error)\r\n                    });\r\n                }\r\n            } else {\r\n                keySystemAccess = event.data;\r\n                logger.info('DRM: KeySystem Access Granted (' + keySystemAccess.keySystem.systemString + ')!  Selecting key system...');\r\n                protectionModel.selectKeySystem(keySystemAccess);\r\n            }\r\n        };\r\n        var onKeySystemSelected = function (event) {\r\n            eventBus.off(events.INTERNAL_KEY_SYSTEM_SELECTED, onKeySystemSelected, self);\r\n            eventBus.off(events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\r\n            if (!event.error) {\r\n                if (!protectionModel) {\r\n                    return;\r\n                }\r\n                keySystem = protectionModel.getKeySystem();\r\n                eventBus.trigger(events.KEY_SYSTEM_SELECTED, { data: keySystemAccess });\r\n                // Set server certificate from protData\r\n                const protData = getProtData(keySystem);\r\n                if (protData && protData.serverCertificate && protData.serverCertificate.length > 0) {\r\n                    protectionModel.setServerCertificate(BASE64.decodeArray(protData.serverCertificate).buffer);\r\n                }\r\n\r\n                // Create key session for the remaining AdaptationSets which have been added to pendingNeedKeyData\r\n                for (let i = 0; i < pendingNeedKeyData.length; i++) {\r\n                    for (ksIdx = 0; ksIdx < pendingNeedKeyData[i].length; ksIdx++) {\r\n                        if (keySystem === pendingNeedKeyData[i][ksIdx].ks) {\r\n                            if (protectionKeyController.isClearKey(keySystem)) {\r\n                                // For Clearkey: if parameters for generating init data was provided by the user, use them for generating\r\n                                // initData and overwrite possible initData indicated in encrypted event (EME)\r\n                                if (protData && protData.hasOwnProperty('clearkeys')) {\r\n                                    const initData = { kids: Object.keys(protData.clearkeys) };\r\n                                    pendingNeedKeyData[i][ksIdx].initData = new TextEncoder().encode(JSON.stringify(initData));\r\n                                }\r\n                            }\r\n                            if (pendingNeedKeyData[i][ksIdx].sessionId) {\r\n                                // Load MediaKeySession with sessionId\r\n                                loadKeySession(pendingNeedKeyData[i][ksIdx].sessionId, pendingNeedKeyData[i][ksIdx].initData);\r\n                            } else if (pendingNeedKeyData[i][ksIdx].initData !== null) {\r\n                                // Create new MediaKeySession with initData\r\n                                createKeySession(pendingNeedKeyData[i][ksIdx].initData, pendingNeedKeyData[i][ksIdx].cdmData);\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                keySystem = undefined;\r\n                if (!fromManifest) {\r\n                    eventBus.trigger(events.KEY_SYSTEM_SELECTED, {\r\n                        data: null,\r\n                        error: new DashJSError(ProtectionErrors.KEY_SYSTEM_ACCESS_DENIED_ERROR_CODE, ProtectionErrors.KEY_SYSTEM_ACCESS_DENIED_ERROR_MESSAGE + 'Error selecting key system! -- ' + event.error)\r\n                    });\r\n                }\r\n            }\r\n        };\r\n\r\n        eventBus.on(events.INTERNAL_KEY_SYSTEM_SELECTED, onKeySystemSelected, self);\r\n        eventBus.on(events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\r\n        protectionModel.requestKeySystemAccess(requestedKeySystems);\r\n    }\r\n\r\n    function sendLicenseRequestCompleteEvent(data, error) {\r\n        eventBus.trigger(events.LICENSE_REQUEST_COMPLETE, { data: data, error: error });\r\n    }\r\n\r\n    function onKeyStatusChanged(e) {\r\n        if (e.error) {\r\n            eventBus.trigger(events.KEY_STATUSES_CHANGED, { data: null, error: e.error });\r\n        } else {\r\n            logger.debug('DRM: key status = ' + e.status);\r\n        }\r\n    }\r\n\r\n    function onKeyMessage(e) {\r\n        logger.debug('DRM: onKeyMessage');\r\n\r\n        // Dispatch event to applications indicating we received a key message\r\n        const keyMessage = e.data;\r\n        eventBus.trigger(events.KEY_MESSAGE, { data: keyMessage });\r\n        const messageType = (keyMessage.messageType) ? keyMessage.messageType : 'license-request';\r\n        const message = keyMessage.message;\r\n        const sessionToken = keyMessage.sessionToken;\r\n        const protData = getProtData(keySystem);\r\n        const keySystemString = keySystem ? keySystem.systemString : null;\r\n        const licenseServerData = protectionKeyController.getLicenseServer(keySystem, protData, messageType);\r\n        const eventData = { sessionToken: sessionToken, messageType: messageType };\r\n\r\n        // Ensure message from CDM is not empty\r\n        if (!message || message.byteLength === 0) {\r\n            sendLicenseRequestCompleteEvent(eventData, new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_CODE, ProtectionErrors.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_MESSAGE));\r\n            return;\r\n        }\r\n\r\n        // Message not destined for license server\r\n        if (!licenseServerData) {\r\n            logger.debug('DRM: License server request not required for this message (type = ' + e.data.messageType + ').  Session ID = ' + sessionToken.getSessionID());\r\n            sendLicenseRequestCompleteEvent(eventData);\r\n            return;\r\n        }\r\n\r\n        // Perform any special handling for ClearKey\r\n        if (protectionKeyController.isClearKey(keySystem)) {\r\n            const clearkeys = protectionKeyController.processClearKeyLicenseRequest(keySystem, protData, message);\r\n            if (clearkeys) {\r\n                logger.debug('DRM: ClearKey license request handled by application!');\r\n                sendLicenseRequestCompleteEvent(eventData);\r\n                protectionModel.updateKeySession(sessionToken, clearkeys);\r\n                return;\r\n            }\r\n        }\r\n\r\n        // All remaining key system scenarios require a request to a remote license server\r\n        // Determine license server URL\r\n        let url = null;\r\n        if (protData && protData.serverURL) {\r\n            const serverURL = protData.serverURL;\r\n            if (typeof serverURL === 'string' && serverURL !== '') {\r\n                url = serverURL;\r\n            } else if (typeof serverURL === 'object' && serverURL.hasOwnProperty(messageType)) {\r\n                url = serverURL[messageType];\r\n            }\r\n        } else if (protData && protData.laURL && protData.laURL !== '') {\r\n            // TODO: Deprecated!\r\n            url = protData.laURL;\r\n        } else {\r\n            // For clearkey use the url defined in the manifest\r\n            if (protectionKeyController.isClearKey(keySystem)) {\r\n                url = keySystem.getLicenseServerUrlFromMediaInfo(mediaInfoArr);\r\n            } else {\r\n                const psshData = CommonEncryption.getPSSHData(sessionToken.initData);\r\n                url = keySystem.getLicenseServerURLFromInitData(psshData);\r\n                if (!url) {\r\n                    url = e.data.laURL;\r\n                }\r\n            }\r\n        }\r\n        // Possibly update or override the URL based on the message\r\n        url = licenseServerData.getServerURLFromMessage(url, message, messageType);\r\n\r\n        // Ensure valid license server URL\r\n        if (!url) {\r\n            sendLicenseRequestCompleteEvent(eventData, new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_CODE, ProtectionErrors.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_MESSAGE));\r\n            return;\r\n        }\r\n\r\n        // Set optional XMLHttpRequest headers from protection data and message\r\n        const reqHeaders = {};\r\n        let withCredentials = false;\r\n        const updateHeaders = function (headers) {\r\n            if (headers) {\r\n                for (const key in headers) {\r\n                    if ('authorization' === key.toLowerCase()) {\r\n                        withCredentials = true;\r\n                    }\r\n                    reqHeaders[key] = headers[key];\r\n                }\r\n            }\r\n        };\r\n        if (protData) {\r\n            updateHeaders(protData.httpRequestHeaders);\r\n        }\r\n        updateHeaders(keySystem.getRequestHeadersFromMessage(message));\r\n\r\n        // Overwrite withCredentials property from protData if present\r\n        if (protData && typeof protData.withCredentials == 'boolean') {\r\n            withCredentials = protData.withCredentials;\r\n        }\r\n\r\n        const reportError = function (xhr, eventData, keySystemString, messageType) {\r\n            const errorMsg = ((xhr.response) ? licenseServerData.getErrorResponse(xhr.response, keySystemString, messageType) : 'NONE');\r\n            sendLicenseRequestCompleteEvent(eventData, new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE,\r\n                ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE + keySystemString + ' update, XHR complete. status is \"' +\r\n                xhr.statusText + '\" (' + xhr.status + '), readyState is ' + xhr.readyState + '.  Response is ' + errorMsg));\r\n        };\r\n\r\n        const onLoad = function (xhr) {\r\n            if (!protectionModel) {\r\n                return;\r\n            }\r\n\r\n            if (xhr.status === 200) {\r\n                let licenseResponse = new LicenseResponse(xhr.responseURL, Utils.parseHttpHeaders(xhr.getAllResponseHeaders ? xhr.getAllResponseHeaders() : null), xhr.response);\r\n                applyFilters(licenseResponseFilters, licenseResponse).then(() => {\r\n                    const licenseMessage = licenseServerData.getLicenseMessage(licenseResponse.data, keySystemString, messageType);\r\n                    if (licenseMessage !== null) {\r\n                        sendLicenseRequestCompleteEvent(eventData);\r\n                        protectionModel.updateKeySession(sessionToken, licenseMessage);\r\n                    } else {\r\n                        reportError(xhr, eventData, keySystemString, messageType);\r\n                    }\r\n                });\r\n            } else {\r\n                reportError(xhr, eventData, keySystemString, messageType);\r\n            }\r\n        };\r\n\r\n        const onAbort = function (xhr) {\r\n            sendLicenseRequestCompleteEvent(eventData, new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE,\r\n                ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE + keySystemString + ' update, XHR aborted. status is \"' +\r\n                xhr.statusText + '\" (' + xhr.status + '), readyState is ' + xhr.readyState));\r\n        };\r\n\r\n        const onError = function (xhr) {\r\n            sendLicenseRequestCompleteEvent(eventData, new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE,\r\n                ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE + keySystemString + ' update, XHR error. status is \"' +\r\n                xhr.statusText + '\" (' + xhr.status + '), readyState is ' + xhr.readyState));\r\n        };\r\n\r\n        const reqPayload = keySystem.getLicenseRequestFromMessage(message);\r\n        const reqMethod = licenseServerData.getHTTPMethod(messageType);\r\n        const responseType = licenseServerData.getResponseType(keySystemString, messageType);\r\n        const timeout = protData && !isNaN(protData.httpTimeout) ? protData.httpTimeout : LICENSE_SERVER_REQUEST_DEFAULT_TIMEOUT;\r\n        const sessionId = sessionToken.getSessionID() || null;\r\n\r\n        let licenseRequest = new LicenseRequest(url, reqMethod, responseType, reqHeaders, withCredentials, messageType, sessionId, reqPayload);\r\n        applyFilters(licenseRequestFilters, licenseRequest).then(() => {\r\n            doLicenseRequest(licenseRequest, LICENSE_SERVER_REQUEST_RETRIES, timeout, onLoad, onAbort, onError);\r\n        });\r\n    }\r\n\r\n    // Implement license requests with a retry mechanism to avoid temporary network issues to affect playback experience\r\n    function doLicenseRequest(request, retriesCount, timeout, onLoad, onAbort, onError) {\r\n        const xhr = new XMLHttpRequest();\r\n\r\n        const cmcdParams = cmcdModel.getQueryParameter({\r\n            url: request.url,\r\n            type: HTTPRequest.LICENSE\r\n        });\r\n\r\n        if (cmcdParams) {\r\n            request.url = Utils.addAditionalQueryParameterToUrl(request.url, [cmcdParams]);\r\n        }\r\n\r\n        xhr.open(request.method, request.url, true);\r\n        xhr.responseType = request.responseType;\r\n        xhr.withCredentials = request.withCredentials;\r\n        if (timeout > 0) {\r\n            xhr.timeout = timeout;\r\n        }\r\n        for (const key in request.headers) {\r\n            xhr.setRequestHeader(key, request.headers[key]);\r\n        }\r\n\r\n        const retryRequest = function () {\r\n            // fail silently and retry\r\n            retriesCount--;\r\n            setTimeout(function () {\r\n                doLicenseRequest(request, retriesCount, timeout, onLoad, onAbort, onError);\r\n            }, LICENSE_SERVER_REQUEST_RETRY_INTERVAL);\r\n        };\r\n\r\n        xhr.onload = function () {\r\n            if (this.status === 200 || retriesCount <= 0) {\r\n                onLoad(this);\r\n            } else {\r\n                logger.warn('License request failed (' + this.status + '). Retrying it... Pending retries: ' + retriesCount);\r\n                retryRequest();\r\n            }\r\n        };\r\n\r\n        xhr.ontimeout = xhr.onerror = function () {\r\n            if (retriesCount <= 0) {\r\n                onError(this);\r\n            } else {\r\n                logger.warn('License request network request failed . Retrying it... Pending retries: ' + retriesCount);\r\n                retryRequest();\r\n            }\r\n        };\r\n\r\n        xhr.onabort = function () {\r\n            onAbort(this);\r\n        };\r\n\r\n        // deprecated, to be removed\r\n        eventBus.trigger(events.LICENSE_REQUEST_SENDING, {\r\n            url: request.url,\r\n            headers: request.headers,\r\n            payload: request.data,\r\n            sessionId: request.sessionId\r\n        });\r\n\r\n        xhr.send(request.data);\r\n    }\r\n\r\n    function onNeedKey(event, retry) {\r\n        logger.debug('DRM: onNeedKey');\r\n        // Ignore non-cenc initData\r\n        if (event.key.initDataType !== 'cenc') {\r\n            logger.warn('DRM:  Only \\'cenc\\' initData is supported!  Ignoring initData of type: ' + event.key.initDataType);\r\n            return;\r\n        }\r\n\r\n        if (mediaInfoArr.length === 0) {\r\n            logger.warn('DRM: onNeedKey called before initializeForMedia, wait until initialized');\r\n            retry = typeof retry === 'undefined' ? 1 : retry + 1;\r\n            if (retry < NEEDKEY_BEFORE_INITIALIZE_RETRIES) {\r\n                needkeyRetries.push(setTimeout(() => {\r\n                    onNeedKey(event, retry);\r\n                }, NEEDKEY_BEFORE_INITIALIZE_TIMEOUT));\r\n                return;\r\n            }\r\n\r\n        }\r\n\r\n        // Some browsers return initData as Uint8Array (IE), some as ArrayBuffer (Chrome).\r\n        // Convert to ArrayBuffer\r\n        let abInitData = event.key.initData;\r\n        if (ArrayBuffer.isView(abInitData)) {\r\n            abInitData = abInitData.buffer;\r\n        }\r\n\r\n        // If key system has already been selected and initData already seen, then do nothing\r\n        if (keySystem) {\r\n            const initDataForKS = CommonEncryption.getPSSHForKeySystem(keySystem, abInitData);\r\n            if (initDataForKS) {\r\n\r\n                // Check for duplicate initData\r\n                if (_isInitDataDuplicate(initDataForKS)) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        logger.debug('DRM: initData:', String.fromCharCode.apply(null, new Uint8Array(abInitData)));\r\n\r\n        const supportedKS = protectionKeyController.getSupportedKeySystems(abInitData, protDataSet);\r\n        if (supportedKS.length === 0) {\r\n            logger.debug('DRM: Received needkey event with initData, but we don\\'t support any of the key systems!');\r\n            return;\r\n        }\r\n\r\n        selectKeySystem(supportedKS, false);\r\n    }\r\n\r\n    function getKeySystems() {\r\n        return protectionKeyController ? protectionKeyController.getKeySystems() : [];\r\n    }\r\n\r\n    function setKeySystems(keySystems) {\r\n        if (protectionKeyController) {\r\n            protectionKeyController.setKeySystems(keySystems);\r\n        }\r\n    }\r\n\r\n    function setLicenseRequestFilters (filters) {\r\n        licenseRequestFilters = filters;\r\n    }\r\n\r\n    function setLicenseResponseFilters (filters) {\r\n        licenseResponseFilters = filters;\r\n    }\r\n\r\n    function applyFilters (filters, param) {\r\n        if (!filters) return Promise.resolve();\r\n        return filters.reduce((prev, next) => {\r\n            return prev.then(() => {\r\n                return next(param);\r\n            });\r\n        }, Promise.resolve());\r\n    }\r\n\r\n    instance = {\r\n        initializeForMedia: initializeForMedia,\r\n        clearMediaInfoArrayByStreamId: clearMediaInfoArrayByStreamId,\r\n        createKeySession: createKeySession,\r\n        loadKeySession: loadKeySession,\r\n        removeKeySession: removeKeySession,\r\n        closeKeySession: closeKeySession,\r\n        setServerCertificate: setServerCertificate,\r\n        setMediaElement: setMediaElement,\r\n        setSessionType: setSessionType,\r\n        setRobustnessLevel: setRobustnessLevel,\r\n        setProtectionData: setProtectionData,\r\n        getSupportedKeySystemsFromContentProtection: getSupportedKeySystemsFromContentProtection,\r\n        getKeySystems: getKeySystems,\r\n        setKeySystems: setKeySystems,\r\n        setLicenseRequestFilters: setLicenseRequestFilters,\r\n        setLicenseResponseFilters: setLicenseResponseFilters,\r\n        stop: stop,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n    return instance;\r\n}\r\n\r\nProtectionController.__dashjs_factory_name = 'ProtectionController';\r\nexport default dashjs.FactoryMaker.getClassFactory(ProtectionController); /* jshint ignore:line */\r\n",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport CommonEncryption from './../CommonEncryption';\r\nimport KeySystemClearKey from './../drm/KeySystemClearKey';\r\nimport KeySystemW3CClearKey from './../drm/KeySystemW3CClearKey';\r\nimport KeySystemWidevine from './../drm/KeySystemWidevine';\r\nimport KeySystemPlayReady from './../drm/KeySystemPlayReady';\r\nimport DRMToday from './../servers/DRMToday';\r\nimport PlayReady from './../servers/PlayReady';\r\nimport Widevine from './../servers/Widevine';\r\nimport ClearKey from './../servers/ClearKey';\r\nimport ProtectionConstants from '../../constants/ProtectionConstants';\r\n\r\n/**\r\n * @module ProtectionKeyController\r\n * @ignore\r\n * @description Media protection key system functionality that can be modified/overridden by applications\r\n */\r\nfunction ProtectionKeyController() {\r\n\r\n    let context = this.context;\r\n\r\n    let instance,\r\n        debug,\r\n        logger,\r\n        keySystems,\r\n        BASE64,\r\n        clearkeyKeySystem,\r\n        clearkeyW3CKeySystem;\r\n\r\n    function setConfig(config) {\r\n        if (!config) return;\r\n\r\n        if (config.debug) {\r\n            debug = config.debug;\r\n            logger = debug.getLogger(instance);\r\n        }\r\n\r\n        if (config.BASE64) {\r\n            BASE64 = config.BASE64;\r\n        }\r\n    }\r\n\r\n    function initialize() {\r\n        keySystems = [];\r\n\r\n        let keySystem;\r\n\r\n        // PlayReady\r\n        keySystem = KeySystemPlayReady(context).getInstance({BASE64: BASE64});\r\n        keySystems.push(keySystem);\r\n\r\n        // Widevine\r\n        keySystem = KeySystemWidevine(context).getInstance({BASE64: BASE64});\r\n        keySystems.push(keySystem);\r\n\r\n        // ClearKey\r\n        keySystem = KeySystemClearKey(context).getInstance({BASE64: BASE64});\r\n        keySystems.push(keySystem);\r\n        clearkeyKeySystem = keySystem;\r\n\r\n        // W3C ClearKey\r\n        keySystem = KeySystemW3CClearKey(context).getInstance({BASE64: BASE64, debug: debug});\r\n        keySystems.push(keySystem);\r\n        clearkeyW3CKeySystem = keySystem;\r\n    }\r\n\r\n    /**\r\n     * Returns a prioritized list of key systems supported\r\n     * by this player (not necessarily those supported by the\r\n     * user agent)\r\n     *\r\n     * @returns {Array.<KeySystem>} a prioritized\r\n     * list of key systems\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function getKeySystems() {\r\n        return keySystems;\r\n    }\r\n\r\n    /**\r\n     * Sets the prioritized list of key systems to be supported\r\n     * by this player.\r\n     *\r\n     * @param {Array.<KeySystem>} newKeySystems the new prioritized\r\n     * list of key systems\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function setKeySystems(newKeySystems) {\r\n        keySystems = newKeySystems;\r\n    }\r\n\r\n    /**\r\n     * Returns the key system associated with the given key system string\r\n     * name (i.e. 'org.w3.clearkey')\r\n     *\r\n     * @param {string} systemString the system string\r\n     * @returns {KeySystem|null} the key system\r\n     * or null if no supported key system is associated with the given key\r\n     * system string\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function getKeySystemBySystemString(systemString) {\r\n        for (let i = 0; i < keySystems.length; i++) {\r\n            if (keySystems[i].systemString === systemString) {\r\n                return keySystems[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Determines whether the given key system is ClearKey.  This is\r\n     * necessary because the EME spec defines ClearKey and its method\r\n     * for providing keys to the key session; and this method has changed\r\n     * between the various API versions.  Our EME-specific ProtectionModels\r\n     * must know if the system is ClearKey so that it can format the keys\r\n     * according to the particular spec version.\r\n     *\r\n     * @param {Object} keySystem the key\r\n     * @returns {boolean} true if this is the ClearKey key system, false\r\n     * otherwise\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function isClearKey(keySystem) {\r\n        return (keySystem === clearkeyKeySystem || keySystem === clearkeyW3CKeySystem);\r\n    }\r\n\r\n    /**\r\n     * Check equality of initData array buffers.\r\n     *\r\n     * @param {ArrayBuffer} initData1 - first initData\r\n     * @param {ArrayBuffer} initData2 - second initData\r\n     * @returns {boolean} true if the initData arrays are equal in size and\r\n     * contents, false otherwise\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function initDataEquals(initData1, initData2) {\r\n        if (initData1.byteLength === initData2.byteLength) {\r\n            let data1 = new Uint8Array(initData1);\r\n            let data2 = new Uint8Array(initData2);\r\n\r\n            for (let j = 0; j < data1.length; j++) {\r\n                if (data1[j] !== data2[j]) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns a set of supported key systems and CENC initialization data\r\n     * from the given array of ContentProtection elements.  Only\r\n     * key systems that are supported by this player will be returned.\r\n     * Key systems are returned in priority order (highest first).\r\n     *\r\n     * @param {Array.<Object>} cps - array of content protection elements parsed\r\n     * from the manifest\r\n     * @returns {Array.<Object>} array of objects indicating which supported key\r\n     * systems were found.  Empty array is returned if no\r\n     * supported key systems were found\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function getSupportedKeySystemsFromContentProtection(cps) {\r\n        let cp, ks, ksIdx, cpIdx;\r\n        let supportedKS = [];\r\n\r\n        if (cps) {\r\n            const cencContentProtection = CommonEncryption.findCencContentProtection(cps);\r\n            for (ksIdx = 0; ksIdx < keySystems.length; ++ksIdx) {\r\n                ks = keySystems[ksIdx];\r\n                for (cpIdx = 0; cpIdx < cps.length; ++cpIdx) {\r\n                    cp = cps[cpIdx];\r\n                    if (cp.schemeIdUri.toLowerCase() === ks.schemeIdURI) {\r\n                        // Look for DRM-specific ContentProtection\r\n                        let initData = ks.getInitData(cp, cencContentProtection);\r\n\r\n                        supportedKS.push({\r\n                            ks: keySystems[ksIdx],\r\n                            initData: initData,\r\n                            cdmData: ks.getCDMData(),\r\n                            sessionId: ks.getSessionId(cp)\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return supportedKS;\r\n    }\r\n\r\n    /**\r\n     * Returns key systems supported by this player for the given PSSH\r\n     * initializationData. Only key systems supported by this player\r\n     * that have protection data present will be returned.  Key systems are returned in priority order\r\n     * (highest priority first)\r\n     *\r\n     * @param {ArrayBuffer} initData Concatenated PSSH data for all DRMs\r\n     * supported by the content\r\n     * @param {ProtectionData} protDataSet user specified protection data - license server url etc\r\n     * supported by the content\r\n     * @returns {Array.<Object>} array of objects indicating which supported key\r\n     * systems were found.  Empty array is returned if no\r\n     * supported key systems were found\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function getSupportedKeySystems(initData, protDataSet) {\r\n        let supportedKS = [];\r\n        let pssh = CommonEncryption.parsePSSHList(initData);\r\n        let ks, keySystemString, shouldNotFilterOutKeySystem;\r\n\r\n        for (let ksIdx = 0; ksIdx < keySystems.length; ++ksIdx) {\r\n            ks = keySystems[ksIdx];\r\n            keySystemString = ks.systemString;\r\n            shouldNotFilterOutKeySystem = (protDataSet) ? keySystemString in protDataSet : true;\r\n\r\n            if (ks.uuid in pssh && shouldNotFilterOutKeySystem) {\r\n                supportedKS.push({\r\n                    ks: ks,\r\n                    initData: pssh[ks.uuid],\r\n                    cdmData: ks.getCDMData(),\r\n                    sessionId: ks.getSessionId()\r\n                });\r\n            }\r\n        }\r\n        return supportedKS;\r\n    }\r\n\r\n    /**\r\n     * Returns the license server implementation data that should be used for this request.\r\n     *\r\n     * @param {KeySystem} keySystem the key system\r\n     * associated with this license request\r\n     * @param {ProtectionData} protData protection data to use for the\r\n     * request\r\n     * @param {string} [messageType=\"license-request\"] the message type associated with this\r\n     * request.  Supported message types can be found\r\n     * {@link https://w3c.github.io/encrypted-media/#idl-def-MediaKeyMessageType|here}.\r\n     * @returns {LicenseServer|null} the license server\r\n     * implementation that should be used for this request or null if the player should not\r\n     * pass messages of the given type to a license server\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     *\r\n     */\r\n    function getLicenseServer(keySystem, protData, messageType) {\r\n\r\n        // Our default server implementations do not do anything with \"license-release\" or\r\n        // \"individualization-request\" messages, so we just send a success event\r\n        if (messageType === 'license-release' || messageType === 'individualization-request') {\r\n            return null;\r\n        }\r\n\r\n        let licenseServerData = null;\r\n        if (protData && protData.hasOwnProperty('drmtoday')) {\r\n            licenseServerData = DRMToday(context).getInstance({BASE64: BASE64});\r\n        } else if (keySystem.systemString === ProtectionConstants.WIDEVINE_KEYSTEM_STRING) {\r\n            licenseServerData = Widevine(context).getInstance();\r\n        } else if (keySystem.systemString === ProtectionConstants.PLAYREADY_KEYSTEM_STRING) {\r\n            licenseServerData = PlayReady(context).getInstance();\r\n        } else if (keySystem.systemString === ProtectionConstants.CLEARKEY_KEYSTEM_STRING) {\r\n            licenseServerData = ClearKey(context).getInstance();\r\n        }\r\n\r\n        return licenseServerData;\r\n    }\r\n\r\n    /**\r\n     * Allows application-specific retrieval of ClearKey keys.\r\n     *\r\n     * @param {KeySystem} clearkeyKeySystem They exact ClearKey System to be used\r\n     * @param {ProtectionData} protData protection data to use for the\r\n     * request\r\n     * @param {ArrayBuffer} message the key message from the CDM\r\n     * @return {ClearKeyKeySet|null} the clear keys associated with\r\n     * the request or null if no keys can be returned by this function\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function processClearKeyLicenseRequest(clearkeyKeySystem, protData, message) {\r\n        try {\r\n            return clearkeyKeySystem.getClearKeysFromProtectionData(protData, message);\r\n        } catch (error) {\r\n            logger.error('Failed to retrieve clearkeys from ProtectionData');\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function setProtectionData(protectionDataSet) {\r\n        var getProtectionData = function (keySystemString) {\r\n            var protData = null;\r\n            if (protectionDataSet) {\r\n                protData = (keySystemString in protectionDataSet) ? protectionDataSet[keySystemString] : null;\r\n            }\r\n            return protData;\r\n        };\r\n\r\n        for (var i = 0; i < keySystems.length; i++) {\r\n            var keySystem = keySystems[i];\r\n            if (keySystem.hasOwnProperty('init')) {\r\n                keySystem.init(getProtectionData(keySystem.systemString));\r\n            }\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        setProtectionData: setProtectionData,\r\n        isClearKey: isClearKey,\r\n        initDataEquals: initDataEquals,\r\n        getKeySystems: getKeySystems,\r\n        setKeySystems: setKeySystems,\r\n        getKeySystemBySystemString: getKeySystemBySystemString,\r\n        getSupportedKeySystemsFromContentProtection: getSupportedKeySystemsFromContentProtection,\r\n        getSupportedKeySystems: getSupportedKeySystems,\r\n        getLicenseServer: getLicenseServer,\r\n        processClearKeyLicenseRequest: processClearKeyLicenseRequest,\r\n        setConfig: setConfig\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nProtectionKeyController.__dashjs_factory_name = 'ProtectionKeyController';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(ProtectionKeyController); /* jshint ignore:line */\r\n",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport KeyPair from '../vo/KeyPair';\r\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet';\r\nimport CommonEncryption from '../CommonEncryption';\r\nimport ProtectionConstants from '../../constants/ProtectionConstants';\r\n\r\nconst uuid = 'e2719d58-a985-b3c9-781a-b030af78d30e';\r\nconst systemString = ProtectionConstants.CLEARKEY_KEYSTEM_STRING;\r\nconst schemeIdURI = 'urn:uuid:' + uuid;\r\n\r\nfunction KeySystemClearKey(config) {\r\n\r\n    config = config || {};\r\n    let instance;\r\n    const BASE64 = config.BASE64;\r\n    const LICENSE_SERVER_MANIFEST_CONFIGURATIONS = {\r\n        attributes: ['Laurl', 'laurl'],\r\n        prefixes: ['clearkey', 'dashif']\r\n    };\r\n\r\n    /**\r\n     * Returns desired clearkeys (as specified in the CDM message) from protection data\r\n     *\r\n     * @param {ProtectionData} protectionData the protection data\r\n     * @param {ArrayBuffer} message the ClearKey CDM message\r\n     * @returns {ClearKeyKeySet} the key set or null if none found\r\n     * @throws {Error} if a keyID specified in the CDM message was not found in the\r\n     * protection data\r\n     * @memberof KeySystemClearKey\r\n     */\r\n    function getClearKeysFromProtectionData(protectionData, message) {\r\n        let clearkeySet = null;\r\n        if (protectionData) {\r\n            // ClearKey is the only system that does not require a license server URL, so we\r\n            // handle it here when keys are specified in protection data\r\n            const jsonMsg = JSON.parse(String.fromCharCode.apply(null, new Uint8Array(message)));\r\n            const keyPairs = [];\r\n            for (let i = 0; i < jsonMsg.kids.length; i++) {\r\n                const clearkeyID = jsonMsg.kids[i];\r\n                const clearkey = (protectionData.clearkeys && protectionData.clearkeys.hasOwnProperty(clearkeyID)) ? protectionData.clearkeys[clearkeyID] : null;\r\n                if (!clearkey) {\r\n                    throw new Error('DRM: ClearKey keyID (' + clearkeyID + ') is not known!');\r\n                }\r\n                // KeyIDs from CDM are not base64 padded.  Keys may or may not be padded\r\n                keyPairs.push(new KeyPair(clearkeyID, clearkey));\r\n            }\r\n            clearkeySet = new ClearKeyKeySet(keyPairs);\r\n        }\r\n        return clearkeySet;\r\n    }\r\n\r\n    function getInitData(cp, cencContentProtection) {\r\n        try {\r\n            let initData = CommonEncryption.parseInitDataFromContentProtection(cp, BASE64);\r\n\r\n            if (!initData && cencContentProtection) {\r\n                const cencDefaultKid = cencDefaultKidToBase64Representation(cencContentProtection['cenc:default_KID']);\r\n                const data = {kids: [cencDefaultKid]};\r\n                initData = new TextEncoder().encode(JSON.stringify(data));\r\n            }\r\n\r\n            return initData;\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function cencDefaultKidToBase64Representation(cencDefaultKid) {\r\n        try {\r\n            let kid = cencDefaultKid.replace(/-/g, '');\r\n            kid = btoa(kid.match(/\\w{2}/g).map((a) => {\r\n                return String.fromCharCode(parseInt(a, 16));\r\n            }).join(''));\r\n            return kid.replace(/=/g, '');\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function getRequestHeadersFromMessage(/*message*/) {\r\n        // Set content type to application/json by default\r\n        return {\r\n            'Content-Type': 'application/json'\r\n        };\r\n    }\r\n\r\n    function getLicenseRequestFromMessage(message) {\r\n        return JSON.parse(String.fromCharCode.apply(null, new Uint8Array(message)));\r\n    }\r\n\r\n    function getLicenseServerURLFromInitData(/*initData*/) {\r\n        return null;\r\n    }\r\n\r\n    function getLicenseServerUrlFromMediaInfo(mediaInfo) {\r\n        try {\r\n            if (!mediaInfo || mediaInfo.length === 0) {\r\n                return null;\r\n            }\r\n            let i = 0;\r\n            let licenseServer = null;\r\n            while (i < mediaInfo.length && !licenseServer) {\r\n                const info = mediaInfo[i];\r\n                if (info && info.contentProtection && info.contentProtection.length > 0) {\r\n                    const clearkeyProtData = info.contentProtection.filter((cp) => {\r\n                        return cp.schemeIdUri && cp.schemeIdUri === schemeIdURI;\r\n                    });\r\n                    if (clearkeyProtData && clearkeyProtData.length > 0) {\r\n                        let j = 0;\r\n                        while (j < clearkeyProtData.length && !licenseServer) {\r\n                            const ckData = clearkeyProtData[j];\r\n                            let k = 0;\r\n                            while (k < LICENSE_SERVER_MANIFEST_CONFIGURATIONS.attributes.length && !licenseServer) {\r\n                                let l = 0;\r\n                                const attribute = LICENSE_SERVER_MANIFEST_CONFIGURATIONS.attributes[k];\r\n                                while (l < LICENSE_SERVER_MANIFEST_CONFIGURATIONS.prefixes.length && !licenseServer) {\r\n                                    const prefix = LICENSE_SERVER_MANIFEST_CONFIGURATIONS.prefixes[l];\r\n                                    if (ckData[attribute] && ckData[attribute].__prefix && ckData[attribute].__prefix === prefix && ckData[attribute].__text) {\r\n                                        licenseServer = ckData[attribute].__text;\r\n                                    }\r\n                                    l += 1;\r\n                                }\r\n                                k += 1;\r\n                            }\r\n                            j += 1;\r\n                        }\r\n                    }\r\n                }\r\n                i += 1;\r\n            }\r\n            return licenseServer;\r\n        } catch\r\n            (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function getCDMData() {\r\n        return null;\r\n    }\r\n\r\n    function getSessionId(/*cp*/) {\r\n        return null;\r\n    }\r\n\r\n    instance = {\r\n        uuid: uuid,\r\n        schemeIdURI: schemeIdURI,\r\n        systemString: systemString,\r\n        getInitData: getInitData,\r\n        getRequestHeadersFromMessage: getRequestHeadersFromMessage,\r\n        getLicenseRequestFromMessage: getLicenseRequestFromMessage,\r\n        getLicenseServerURLFromInitData: getLicenseServerURLFromInitData,\r\n        getCDMData: getCDMData,\r\n        getSessionId: getSessionId,\r\n        getLicenseServerUrlFromMediaInfo,\r\n        getClearKeysFromProtectionData: getClearKeysFromProtectionData\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nKeySystemClearKey.__dashjs_factory_name = 'KeySystemClearKey';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(KeySystemClearKey); /* jshint ignore:line */\r\n",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Microsoft PlayReady DRM\r\n *\r\n * @class\r\n * @implements KeySystem\r\n */\r\nimport CommonEncryption from '../CommonEncryption';\r\nimport ProtectionConstants from '../../constants/ProtectionConstants';\r\n\r\nconst uuid = '9a04f079-9840-4286-ab92-e65be0885f95';\r\nconst systemString = ProtectionConstants.PLAYREADY_KEYSTEM_STRING;\r\nconst schemeIdURI = 'urn:uuid:' + uuid;\r\nconst PRCDMData = '<PlayReadyCDMData type=\"LicenseAcquisition\"><LicenseAcquisition version=\"1.0\" Proactive=\"false\"><CustomData encoding=\"base64encoded\">%CUSTOMDATA%</CustomData></LicenseAcquisition></PlayReadyCDMData>';\r\nlet protData;\r\n\r\nfunction KeySystemPlayReady(config) {\r\n\r\n    config = config || {};\r\n    let instance;\r\n    let messageFormat = 'utf-16';\r\n    const BASE64 = config.BASE64;\r\n\r\n    function checkConfig() {\r\n        if (!BASE64 || !BASE64.hasOwnProperty('decodeArray') || !BASE64.hasOwnProperty('decodeArray') ) {\r\n            throw new Error('Missing config parameter(s)');\r\n        }\r\n    }\r\n\r\n    function getRequestHeadersFromMessage(message) {\r\n        let msg,\r\n            xmlDoc;\r\n        const headers = {};\r\n        const parser = new DOMParser();\r\n        const dataview = (messageFormat === 'utf-16') ? new Uint16Array(message) : new Uint8Array(message);\r\n\r\n        msg = String.fromCharCode.apply(null, dataview);\r\n        xmlDoc = parser.parseFromString(msg, 'application/xml');\r\n\r\n        const headerNameList = xmlDoc.getElementsByTagName('name');\r\n        const headerValueList = xmlDoc.getElementsByTagName('value');\r\n        for (let i = 0; i < headerNameList.length; i++) {\r\n            headers[headerNameList[i].childNodes[0].nodeValue] = headerValueList[i].childNodes[0].nodeValue;\r\n        }\r\n        // Some versions of the PlayReady CDM return 'Content' instead of 'Content-Type'.\r\n        // this is NOT w3c conform and license servers may reject the request!\r\n        // -> rename it to proper w3c definition!\r\n        if (headers.hasOwnProperty('Content')) {\r\n            headers['Content-Type'] = headers.Content;\r\n            delete headers.Content;\r\n        }\r\n        // Set Content-Type header by default if not provided in the the CDM message (<PlayReadyKeyMessage/>)\r\n        // or if the message contains directly the challenge itself (Ex: LG SmartTVs)\r\n        if (!headers.hasOwnProperty('Content-Type')) {\r\n            headers['Content-Type'] = 'text/xml; charset=utf-8';\r\n        }\r\n        return headers;\r\n    }\r\n\r\n    function getLicenseRequestFromMessage(message) {\r\n        let licenseRequest = null;\r\n        const parser = new DOMParser();\r\n        const dataview = (messageFormat === 'utf-16') ? new Uint16Array(message) : new Uint8Array(message);\r\n\r\n        checkConfig();\r\n        const msg = String.fromCharCode.apply(null, dataview);\r\n        const xmlDoc = parser.parseFromString(msg, 'application/xml');\r\n\r\n        if (xmlDoc.getElementsByTagName('PlayReadyKeyMessage')[0]) {\r\n            const Challenge = xmlDoc.getElementsByTagName('Challenge')[0].childNodes[0].nodeValue;\r\n            if (Challenge) {\r\n                licenseRequest = BASE64.decode(Challenge);\r\n            }\r\n        } else {\r\n            // The message from CDM is not a wrapped message as on IE11 and Edge,\r\n            // thus it contains direclty the challenge itself\r\n            // (note that the xmlDoc at this point may be unreadable since it may have been interpreted as UTF-16)\r\n            return message;\r\n        }\r\n\r\n        return licenseRequest;\r\n    }\r\n\r\n    function getLicenseServerURLFromInitData(initData) {\r\n        if (initData) {\r\n            const data = new DataView(initData);\r\n            const numRecords = data.getUint16(4, true);\r\n            let offset = 6;\r\n            const parser = new DOMParser();\r\n\r\n            for (let i = 0; i < numRecords; i++) {\r\n                // Parse the PlayReady Record header\r\n                const recordType = data.getUint16(offset, true);\r\n                offset += 2;\r\n                const recordLength = data.getUint16(offset, true);\r\n                offset += 2;\r\n                if (recordType !== 0x0001) {\r\n                    offset += recordLength;\r\n                    continue;\r\n                }\r\n\r\n                const recordData = initData.slice(offset, offset + recordLength);\r\n                const record = String.fromCharCode.apply(null, new Uint16Array(recordData));\r\n                const xmlDoc = parser.parseFromString(record, 'application/xml');\r\n\r\n                // First try <LA_URL>\r\n                if (xmlDoc.getElementsByTagName('LA_URL')[0]) {\r\n                    const laurl = xmlDoc.getElementsByTagName('LA_URL')[0].childNodes[0].nodeValue;\r\n                    if (laurl) {\r\n                        return laurl;\r\n                    }\r\n                }\r\n\r\n                // Optionally, try <LUI_URL>\r\n                if (xmlDoc.getElementsByTagName('LUI_URL')[0]) {\r\n                    const luiurl = xmlDoc.getElementsByTagName('LUI_URL')[0].childNodes[0].nodeValue;\r\n                    if (luiurl) {\r\n                        return luiurl;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function getInitData(cpData) {\r\n        // * desc@ getInitData\r\n        // *   generate PSSH data from PROHeader defined in MPD file\r\n        // *   PSSH format:\r\n        // *   size (4)\r\n        // *   box type(PSSH) (8)\r\n        // *   Protection SystemID (16)\r\n        // *   protection system data size (4) - length of decoded PROHeader\r\n        // *   decoded PROHeader data from MPD file\r\n        const PSSHBoxType = new Uint8Array([0x70, 0x73, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00]); //'PSSH' 8 bytes\r\n        const playreadySystemID = new Uint8Array([0x9a, 0x04, 0xf0, 0x79, 0x98, 0x40, 0x42, 0x86, 0xab, 0x92, 0xe6, 0x5b, 0xe0, 0x88, 0x5f, 0x95]);\r\n\r\n        let byteCursor = 0;\r\n        let uint8arraydecodedPROHeader = null;\r\n\r\n        let PROSize,\r\n            PSSHSize,\r\n            PSSHBoxBuffer,\r\n            PSSHBox,\r\n            PSSHData;\r\n\r\n        checkConfig();\r\n        if (!cpData) {\r\n            return null;\r\n        }\r\n        // Handle common encryption PSSH\r\n        if ('pssh' in cpData) {\r\n            return CommonEncryption.parseInitDataFromContentProtection(cpData, BASE64);\r\n        }\r\n        // Handle native MS PlayReady ContentProtection elements\r\n        if ('pro' in cpData) {\r\n            uint8arraydecodedPROHeader = BASE64.decodeArray(cpData.pro.__text);\r\n        }\r\n        else if ('prheader' in cpData) {\r\n            uint8arraydecodedPROHeader = BASE64.decodeArray(cpData.prheader.__text);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n\r\n        PROSize = uint8arraydecodedPROHeader.length;\r\n        PSSHSize = 0x4 + PSSHBoxType.length + playreadySystemID.length + 0x4 + PROSize;\r\n\r\n        PSSHBoxBuffer = new ArrayBuffer(PSSHSize);\r\n\r\n        PSSHBox = new Uint8Array(PSSHBoxBuffer);\r\n        PSSHData = new DataView(PSSHBoxBuffer);\r\n\r\n        PSSHData.setUint32(byteCursor, PSSHSize);\r\n        byteCursor += 0x4;\r\n\r\n        PSSHBox.set(PSSHBoxType, byteCursor);\r\n        byteCursor += PSSHBoxType.length;\r\n\r\n        PSSHBox.set(playreadySystemID, byteCursor);\r\n        byteCursor += playreadySystemID.length;\r\n\r\n        PSSHData.setUint32(byteCursor, PROSize);\r\n        byteCursor += 0x4;\r\n\r\n        PSSHBox.set(uint8arraydecodedPROHeader, byteCursor);\r\n        byteCursor += PROSize;\r\n\r\n        return PSSHBox.buffer;\r\n    }\r\n\r\n    /**\r\n     * It seems that some PlayReady implementations return their XML-based CDM\r\n     * messages using UTF16, while others return them as UTF8.  Use this function\r\n     * to modify the message format to expect when parsing CDM messages.\r\n     *\r\n     * @param {string} format the expected message format.  Either \"utf-8\" or \"utf-16\".\r\n     * @throws {Error} Specified message format is not one of \"utf8\" or \"utf16\"\r\n     */\r\n    function setPlayReadyMessageFormat(format) {\r\n        if (format !== 'utf-8' && format !== 'utf-16') {\r\n            throw new Error('Specified message format is not one of \"utf-8\" or \"utf-16\"');\r\n        }\r\n        messageFormat = format;\r\n    }\r\n\r\n    /**\r\n     * Initialize the Key system with protection data\r\n     * @param {Object} protectionData the protection data\r\n     */\r\n    function init(protectionData) {\r\n        if (protectionData) {\r\n            protData = protectionData;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Get Playready Custom data\r\n     */\r\n    function getCDMData() {\r\n        let customData,\r\n            cdmData,\r\n            cdmDataBytes,\r\n            i;\r\n\r\n        checkConfig();\r\n        if (protData && protData.cdmData) {\r\n            // Convert custom data into multibyte string\r\n            customData = [];\r\n            for (i = 0; i < protData.cdmData.length; ++i) {\r\n                customData.push(protData.cdmData.charCodeAt(i));\r\n                customData.push(0);\r\n            }\r\n            customData = String.fromCharCode.apply(null, customData);\r\n\r\n            // Encode in Base 64 the custom data string\r\n            customData = BASE64.encode(customData);\r\n\r\n            // Initialize CDM data with Base 64 encoded custom data\r\n            // (see https://msdn.microsoft.com/en-us/library/dn457361.aspx)\r\n            cdmData = PRCDMData.replace('%CUSTOMDATA%', customData);\r\n\r\n            // Convert CDM data into multibyte characters\r\n            cdmDataBytes = [];\r\n            for (i = 0; i < cdmData.length; ++i) {\r\n                cdmDataBytes.push(cdmData.charCodeAt(i));\r\n                cdmDataBytes.push(0);\r\n            }\r\n\r\n            return new Uint8Array(cdmDataBytes).buffer;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function getSessionId(cp) {\r\n        // Get sessionId from protectionData or from manifest\r\n        if (protData && protData.sessionId) {\r\n            return protData.sessionId;\r\n        } else if (cp && cp.sessionId) {\r\n            return cp.sessionId;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    instance = {\r\n        uuid: uuid,\r\n        schemeIdURI: schemeIdURI,\r\n        systemString: systemString,\r\n        getInitData: getInitData,\r\n        getRequestHeadersFromMessage: getRequestHeadersFromMessage,\r\n        getLicenseRequestFromMessage: getLicenseRequestFromMessage,\r\n        getLicenseServerURLFromInitData: getLicenseServerURLFromInitData,\r\n        getCDMData: getCDMData,\r\n        getSessionId: getSessionId,\r\n        setPlayReadyMessageFormat: setPlayReadyMessageFormat,\r\n        init: init\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nKeySystemPlayReady.__dashjs_factory_name = 'KeySystemPlayReady';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(KeySystemPlayReady); /* jshint ignore:line */\r\n",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport KeyPair from '../vo/KeyPair';\r\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet';\r\nimport CommonEncryption from '../CommonEncryption';\r\nimport ProtectionConstants from '../../constants/ProtectionConstants';\r\n\r\nconst uuid = '1077efec-c0b2-4d02-ace3-3c1e52e2fb4b';\r\nconst systemString = ProtectionConstants.CLEARKEY_KEYSTEM_STRING;\r\nconst schemeIdURI = 'urn:uuid:' + uuid;\r\n\r\nfunction KeySystemW3CClearKey(config) {\r\n    let instance;\r\n    const BASE64 = config.BASE64;\r\n    const logger = config.debug.getLogger(instance);\r\n    /**\r\n     * Returns desired clearkeys (as specified in the CDM message) from protection data\r\n     *\r\n     * @param {ProtectionDataSet} protectionData the protection data\r\n     * @param {ArrayBuffer} message the ClearKey CDM message\r\n     * @returns {ClearKeyKeySet} the key set or null if none found\r\n     * @throws {Error} if a keyID specified in the CDM message was not found in the\r\n     * protection data\r\n     * @memberof KeySystemClearKey\r\n     */\r\n    function getClearKeysFromProtectionData(protectionData, message) {\r\n        let clearkeySet = null;\r\n        if (protectionData) {\r\n            // ClearKey is the only system that does not require a license server URL, so we\r\n            // handle it here when keys are specified in protection data\r\n            const jsonMsg = JSON.parse(String.fromCharCode.apply(null, new Uint8Array(message)));\r\n            const keyPairs = [];\r\n            for (let i = 0; i < jsonMsg.kids.length; i++) {\r\n                const clearkeyID = jsonMsg.kids[i];\r\n                const clearkey = (protectionData.clearkeys && protectionData.clearkeys.hasOwnProperty(clearkeyID)) ? protectionData.clearkeys[clearkeyID] : null;\r\n                if (!clearkey) {\r\n                    throw new Error('DRM: ClearKey keyID (' + clearkeyID + ') is not known!');\r\n                }\r\n                // KeyIDs from CDM are not base64 padded.  Keys may or may not be padded\r\n                keyPairs.push(new KeyPair(clearkeyID, clearkey));\r\n            }\r\n            clearkeySet = new ClearKeyKeySet(keyPairs);\r\n\r\n            logger.warn('ClearKey schemeIdURI is using W3C Common PSSH systemID (1077efec-c0b2-4d02-ace3-3c1e52e2fb4b) in Content Protection. See DASH-IF IOP v4.1 section 7.6.2.4');\r\n        }\r\n        return clearkeySet;\r\n    }\r\n\r\n    function getInitData(cp) {\r\n        return CommonEncryption.parseInitDataFromContentProtection(cp, BASE64);\r\n    }\r\n\r\n    function getRequestHeadersFromMessage(/*message*/) {\r\n        return null;\r\n    }\r\n\r\n    function getLicenseRequestFromMessage(message) {\r\n        return new Uint8Array(message);\r\n    }\r\n\r\n    function getLicenseServerURLFromInitData(/*initData*/) {\r\n        return null;\r\n    }\r\n\r\n    function getCDMData() {\r\n        return null;\r\n    }\r\n\r\n    function getSessionId(/*cp*/) {\r\n        return null;\r\n    }\r\n\r\n    instance = {\r\n        uuid: uuid,\r\n        schemeIdURI: schemeIdURI,\r\n        systemString: systemString,\r\n        getInitData: getInitData,\r\n        getRequestHeadersFromMessage: getRequestHeadersFromMessage,\r\n        getLicenseRequestFromMessage: getLicenseRequestFromMessage,\r\n        getLicenseServerURLFromInitData: getLicenseServerURLFromInitData,\r\n        getCDMData: getCDMData,\r\n        getSessionId: getSessionId,\r\n        getClearKeysFromProtectionData: getClearKeysFromProtectionData\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nKeySystemW3CClearKey.__dashjs_factory_name = 'KeySystemW3CClearKey';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(KeySystemW3CClearKey); /* jshint ignore:line */\r\n\r\n",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Google Widevine DRM\r\n *\r\n * @class\r\n * @implements MediaPlayer.dependencies.protection.KeySystem\r\n */\r\n\r\nimport CommonEncryption from '../CommonEncryption';\r\nimport ProtectionConstants from '../../constants/ProtectionConstants';\r\n\r\nconst uuid = 'edef8ba9-79d6-4ace-a3c8-27dcd51d21ed';\r\nconst systemString = ProtectionConstants.WIDEVINE_KEYSTEM_STRING;\r\nconst schemeIdURI = 'urn:uuid:' + uuid;\r\n\r\nfunction KeySystemWidevine(config) {\r\n\r\n    config = config || {};\r\n    let instance;\r\n    let protData = null;\r\n    const BASE64 = config.BASE64;\r\n\r\n    function init(protectionData) {\r\n        if (protectionData) {\r\n            protData = protectionData;\r\n        }\r\n    }\r\n\r\n    function getInitData(cp) {\r\n        return CommonEncryption.parseInitDataFromContentProtection(cp, BASE64);\r\n    }\r\n\r\n    function getRequestHeadersFromMessage( /*message*/ ) {\r\n        return null;\r\n    }\r\n\r\n    function getLicenseRequestFromMessage(message) {\r\n        return new Uint8Array(message);\r\n    }\r\n\r\n    function getLicenseServerURLFromInitData( /*initData*/ ) {\r\n        return null;\r\n    }\r\n\r\n    function getCDMData() {\r\n        return null;\r\n    }\r\n\r\n    function getSessionId(cp) {\r\n        // Get sessionId from protectionData or from manifest\r\n        if (protData && protData.sessionId) {\r\n            return protData.sessionId;\r\n        } else if (cp && cp.sessionId) {\r\n            return cp.sessionId;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    instance = {\r\n        uuid: uuid,\r\n        schemeIdURI: schemeIdURI,\r\n        systemString: systemString,\r\n        init: init,\r\n        getInitData: getInitData,\r\n        getRequestHeadersFromMessage: getRequestHeadersFromMessage,\r\n        getLicenseRequestFromMessage: getLicenseRequestFromMessage,\r\n        getLicenseServerURLFromInitData: getLicenseServerURLFromInitData,\r\n        getCDMData: getCDMData,\r\n        getSessionId: getSessionId\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nKeySystemWidevine.__dashjs_factory_name = 'KeySystemWidevine';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(KeySystemWidevine); /* jshint ignore:line */\r\n",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport ErrorsBase from '../../../core/errors/ErrorsBase';\r\n/**\r\n * @class\r\n */\r\nclass ProtectionErrors extends ErrorsBase {\r\n\tconstructor () {\r\n        super();\r\n\r\n        /**\r\n         *  Generid key Error code\r\n         */\r\n        this.MEDIA_KEYERR_CODE = 100;\r\n        /**\r\n         *  Error code returned by keyerror api for ProtectionModel_01b\r\n         */\r\n        this.MEDIA_KEYERR_UNKNOWN_CODE = 101;\r\n        /**\r\n         *  Error code returned by keyerror api for ProtectionModel_01b\r\n         */\r\n        this.MEDIA_KEYERR_CLIENT_CODE = 102;\r\n        /**\r\n         *  Error code returned by keyerror api for ProtectionModel_01b\r\n         */\r\n        this.MEDIA_KEYERR_SERVICE_CODE = 103;\r\n        /**\r\n         *  Error code returned by keyerror api for ProtectionModel_01b\r\n         */\r\n        this.MEDIA_KEYERR_OUTPUT_CODE = 104;\r\n        /**\r\n         *  Error code returned by keyerror api for ProtectionModel_01b\r\n         */\r\n        this.MEDIA_KEYERR_HARDWARECHANGE_CODE = 105;\r\n        /**\r\n         *  Error code returned by keyerror api for ProtectionModel_01b\r\n         */\r\n        this.MEDIA_KEYERR_DOMAIN_CODE = 106;\r\n\r\n        /**\r\n         *  Error code returned when an error occured in keymessage event for ProtectionModel_01b\r\n         */\r\n        this.MEDIA_KEY_MESSAGE_ERROR_CODE = 107;\r\n        /**\r\n         *  Error code returned when challenge is invalid in keymessage event (event triggered by CDM)\r\n         */\r\n        this.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_CODE = 108;\r\n        /**\r\n         *  Error code returned when License server certificate has not been successfully updated\r\n         */\r\n        this.SERVER_CERTIFICATE_UPDATED_ERROR_CODE = 109;\r\n        /**\r\n         *  Error code returned when license validity has expired\r\n         */\r\n        this.KEY_STATUS_CHANGED_EXPIRED_ERROR_CODE = 110;\r\n        /**\r\n         *  Error code returned when no licenser url is defined\r\n         */\r\n        this.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_CODE = 111;\r\n        /**\r\n         *  Error code returned when key system access is denied\r\n         */\r\n        this.KEY_SYSTEM_ACCESS_DENIED_ERROR_CODE = 112;\r\n        /**\r\n         *  Error code returned when key session has not been successfully created\r\n         */\r\n        this.KEY_SESSION_CREATED_ERROR_CODE = 113;\r\n        /**\r\n         *  Error code returned when license request failed after a keymessage event has been triggered\r\n         */\r\n        this.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE = 114;\r\n\r\n        this.MEDIA_KEYERR_UNKNOWN_MESSAGE = 'An unspecified error occurred. This value is used for errors that don\\'t match any of the other codes.';\r\n        this.MEDIA_KEYERR_CLIENT_MESSAGE = 'The Key System could not be installed or updated.';\r\n        this.MEDIA_KEYERR_SERVICE_MESSAGE = 'The message passed into update indicated an error from the license service.';\r\n        this.MEDIA_KEYERR_OUTPUT_MESSAGE = 'There is no available output device with the required characteristics for the content protection system.';\r\n        this.MEDIA_KEYERR_HARDWARECHANGE_MESSAGE = 'A hardware configuration change caused a content protection error.';\r\n        this.MEDIA_KEYERR_DOMAIN_MESSAGE = 'An error occurred in a multi-device domain licensing configuration. The most common error is a failure to join the domain.';\r\n        this.MEDIA_KEY_MESSAGE_ERROR_MESSAGE = 'Multiple key sessions were creates with a user-agent that does not support sessionIDs!! Unpredictable behavior ahead!';\r\n        this.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_MESSAGE = 'DRM: Empty key message from CDM';\r\n        this.SERVER_CERTIFICATE_UPDATED_ERROR_MESSAGE = 'Error updating server certificate -- ';\r\n        this.KEY_STATUS_CHANGED_EXPIRED_ERROR_MESSAGE = 'DRM: KeyStatusChange error! -- License has expired';\r\n        this.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_MESSAGE = 'DRM: No license server URL specified!';\r\n        this.KEY_SYSTEM_ACCESS_DENIED_ERROR_MESSAGE = 'DRM: KeySystem Access Denied! -- ';\r\n        this.KEY_SESSION_CREATED_ERROR_MESSAGE = 'DRM: unable to create session! --';\r\n        this.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE = 'DRM: licenser error! --';\r\n    }\r\n}\r\n\r\nlet protectionErrors = new ProtectionErrors();\r\nexport default protectionErrors;",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Initial implementation of EME\r\n *\r\n * Implemented by Google Chrome prior to v36\r\n *\r\n * @implements ProtectionModel\r\n * @class\r\n */\r\nimport ProtectionKeyController from '../controllers/ProtectionKeyController';\r\nimport NeedKey from '../vo/NeedKey';\r\nimport DashJSError from '../../vo/DashJSError';\r\nimport KeyMessage from '../vo/KeyMessage';\r\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration';\r\nimport KeySystemAccess from '../vo/KeySystemAccess';\r\nimport ProtectionErrors from '../errors/ProtectionErrors';\r\n\r\nfunction ProtectionModel_01b(config) {\r\n\r\n    config = config || {};\r\n    const context = this.context;\r\n    const eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\r\n    const events = config.events;\r\n    const debug = config.debug;\r\n    const api = config.api;\r\n    const errHandler = config.errHandler;\r\n\r\n    let instance,\r\n        logger,\r\n        videoElement,\r\n        keySystem,\r\n        protectionKeyController,\r\n\r\n        // With this version of the EME APIs, sessionIDs are not assigned to\r\n        // sessions until the first key message is received.  We are assuming\r\n        // that in the case of multiple sessions, key messages will be received\r\n        // in the order that generateKeyRequest() is called.\r\n        // Holding spot for newly-created sessions until we determine whether or\r\n        // not the CDM supports sessionIDs\r\n        pendingSessions,\r\n\r\n        // List of sessions that have been initialized.  Only the first position will\r\n        // be used in the case that the CDM does not support sessionIDs\r\n        sessions,\r\n\r\n        // Not all CDMs support the notion of sessionIDs.  Without sessionIDs\r\n        // there is no way for us to differentiate between sessions, therefore\r\n        // we must only allow a single session.  Once we receive the first key\r\n        // message we can set this flag to determine if more sessions are allowed\r\n        moreSessionsAllowed,\r\n\r\n        // This is our main event handler for all desired HTMLMediaElement events\r\n        // related to EME.  These events are translated into our API-independent\r\n        // versions of the same events\r\n        eventHandler;\r\n\r\n    function setup() {\r\n        logger = debug.getLogger(instance);\r\n        videoElement = null;\r\n        keySystem = null;\r\n        pendingSessions = [];\r\n        sessions = [];\r\n        protectionKeyController = ProtectionKeyController(context).getInstance();\r\n        eventHandler = createEventHandler();\r\n    }\r\n\r\n    function reset() {\r\n        if (videoElement) {\r\n            removeEventListeners();\r\n        }\r\n        for (let i = 0; i < sessions.length; i++) {\r\n            closeKeySession(sessions[i]);\r\n        }\r\n        eventBus.trigger(events.TEARDOWN_COMPLETE);\r\n    }\r\n\r\n    function getKeySystem() {\r\n        return keySystem;\r\n    }\r\n\r\n    function getAllInitData() {\r\n        const retVal = [];\r\n        for (let i = 0; i < pendingSessions.length; i++) {\r\n            retVal.push(pendingSessions[i].initData);\r\n        }\r\n        for (let i = 0; i < sessions.length; i++) {\r\n            retVal.push(sessions[i].initData);\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    function requestKeySystemAccess(ksConfigurations) {\r\n        let ve = videoElement;\r\n        if (!ve) { // Must have a video element to do this capability tests\r\n            ve = document.createElement('video');\r\n        }\r\n\r\n        // Try key systems in order, first one with supported key system configuration\r\n        // is used\r\n        let found = false;\r\n        for (let ksIdx = 0; ksIdx < ksConfigurations.length; ksIdx++) {\r\n            const systemString = ksConfigurations[ksIdx].ks.systemString;\r\n            const configs = ksConfigurations[ksIdx].configs;\r\n            let supportedAudio = null;\r\n            let supportedVideo = null;\r\n\r\n            // Try key system configs in order, first one with supported audio/video\r\n            // is used\r\n            for (let configIdx = 0; configIdx < configs.length; configIdx++) {\r\n                //let audios = configs[configIdx].audioCapabilities;\r\n                const videos = configs[configIdx].videoCapabilities;\r\n                // Look for supported video container/codecs\r\n                if (videos && videos.length !== 0) {\r\n                    supportedVideo = []; // Indicates that we have a requested video config\r\n                    for (let videoIdx = 0; videoIdx < videos.length; videoIdx++) {\r\n                        if (ve.canPlayType(videos[videoIdx].contentType, systemString) !== '') {\r\n                            supportedVideo.push(videos[videoIdx]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // No supported audio or video in this configuration OR we have\r\n                // requested audio or video configuration that is not supported\r\n                if ((!supportedAudio && !supportedVideo) ||\r\n                    (supportedAudio && supportedAudio.length === 0) ||\r\n                    (supportedVideo && supportedVideo.length === 0)) {\r\n                    continue;\r\n                }\r\n\r\n                // This configuration is supported\r\n                found = true;\r\n                const ksConfig = new KeySystemConfiguration(supportedAudio, supportedVideo);\r\n                const ks = protectionKeyController.getKeySystemBySystemString(systemString);\r\n                eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { data: new KeySystemAccess(ks, ksConfig) });\r\n                break;\r\n            }\r\n        }\r\n        if (!found) {\r\n            eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { error: 'Key system access denied! -- No valid audio/video content configurations detected!' });\r\n        }\r\n    }\r\n\r\n    function selectKeySystem(keySystemAccess) {\r\n        keySystem = keySystemAccess.keySystem;\r\n        eventBus.trigger(events.INTERNAL_KEY_SYSTEM_SELECTED);\r\n    }\r\n\r\n    function setMediaElement(mediaElement) {\r\n        if (videoElement === mediaElement) {\r\n            return;\r\n        }\r\n\r\n        // Replacing the previous element\r\n        if (videoElement) {\r\n            removeEventListeners();\r\n\r\n            // Close any open sessions - avoids memory leak on LG webOS 2016/2017 TVs\r\n            for (var i = 0; i < sessions.length; i++) {\r\n                closeKeySession(sessions[i]);\r\n            }\r\n            sessions = [];\r\n        }\r\n\r\n        videoElement = mediaElement;\r\n\r\n        // Only if we are not detaching from the existing element\r\n        if (videoElement) {\r\n            videoElement.addEventListener(api.keyerror, eventHandler);\r\n            videoElement.addEventListener(api.needkey, eventHandler);\r\n            videoElement.addEventListener(api.keymessage, eventHandler);\r\n            videoElement.addEventListener(api.keyadded, eventHandler);\r\n            eventBus.trigger(events.VIDEO_ELEMENT_SELECTED);\r\n        }\r\n    }\r\n\r\n    function createKeySession(initData /*, protData, keySystemType */) {\r\n        if (!keySystem) {\r\n            throw new Error('Can not create sessions until you have selected a key system');\r\n        }\r\n\r\n        // Determine if creating a new session is allowed\r\n        if (moreSessionsAllowed || sessions.length === 0) {\r\n            const newSession = { // Implements SessionToken\r\n                sessionID: null,\r\n                initData: initData,\r\n                getSessionID: function () {\r\n                    return this.sessionID;\r\n                },\r\n\r\n                getExpirationTime: function () {\r\n                    return NaN;\r\n                },\r\n\r\n                getSessionType: function () {\r\n                    return 'temporary';\r\n                }\r\n            };\r\n            pendingSessions.push(newSession);\r\n\r\n            // Send our request to the CDM\r\n            videoElement[api.generateKeyRequest](keySystem.systemString, new Uint8Array(initData));\r\n\r\n            return newSession;\r\n\r\n        } else {\r\n            throw new Error('Multiple sessions not allowed!');\r\n        }\r\n\r\n    }\r\n\r\n    function updateKeySession(sessionToken, message) {\r\n        const sessionID = sessionToken.sessionID;\r\n        if (!protectionKeyController.isClearKey(keySystem)) {\r\n            // Send our request to the CDM\r\n            videoElement[api.addKey](keySystem.systemString,\r\n                new Uint8Array(message), new Uint8Array(sessionToken.initData), sessionID);\r\n        } else {\r\n            // For clearkey, message is a ClearKeyKeySet\r\n            for (let i = 0; i < message.keyPairs.length; i++) {\r\n                videoElement[api.addKey](keySystem.systemString,\r\n                    message.keyPairs[i].key, message.keyPairs[i].keyID, sessionID);\r\n            }\r\n        }\r\n    }\r\n\r\n    function closeKeySession(sessionToken) {\r\n        // Send our request to the CDM\r\n        try {\r\n            videoElement[api.cancelKeyRequest](keySystem.systemString, sessionToken.sessionID);\r\n        } catch (error) {\r\n            eventBus.trigger(events.KEY_SESSION_CLOSED, { data: null, error: 'Error closing session (' + sessionToken.sessionID + ') ' + error.message });\r\n        }\r\n    }\r\n\r\n    function setServerCertificate(/*serverCertificate*/) { /* Not supported */ }\r\n    function loadKeySession(/*sessionID*/) { /* Not supported */ }\r\n    function removeKeySession(/*sessionToken*/) { /* Not supported */ }\r\n\r\n    function createEventHandler() {\r\n        return {\r\n            handleEvent: function (event) {\r\n                let sessionToken = null;\r\n                switch (event.type) {\r\n                    case api.needkey:\r\n                        let initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\r\n                        eventBus.trigger(events.NEED_KEY, { key: new NeedKey(initData, 'cenc') });\r\n                        break;\r\n\r\n                    case api.keyerror:\r\n                        sessionToken = findSessionByID(sessions, event.sessionId);\r\n                        if (!sessionToken) {\r\n                            sessionToken = findSessionByID(pendingSessions, event.sessionId);\r\n                        }\r\n\r\n                        if (sessionToken) {\r\n                            let code = ProtectionErrors.MEDIA_KEYERR_CODE;\r\n                            let msg = '';\r\n                            switch (event.errorCode.code) {\r\n                                case 1:\r\n                                    code = ProtectionErrors.MEDIA_KEYERR_UNKNOWN_CODE;\r\n                                    msg += 'MEDIA_KEYERR_UNKNOWN - ' + ProtectionErrors.MEDIA_KEYERR_UNKNOWN_MESSAGE;\r\n                                    break;\r\n                                case 2:\r\n                                    code = ProtectionErrors.MEDIA_KEYERR_CLIENT_CODE;\r\n                                    msg += 'MEDIA_KEYERR_CLIENT - ' + ProtectionErrors.MEDIA_KEYERR_CLIENT_MESSAGE;\r\n                                    break;\r\n                                case 3:\r\n                                    code = ProtectionErrors.MEDIA_KEYERR_SERVICE_CODE;\r\n                                    msg += 'MEDIA_KEYERR_SERVICE - ' + ProtectionErrors.MEDIA_KEYERR_SERVICE_MESSAGE;\r\n                                    break;\r\n                                case 4:\r\n                                    code = ProtectionErrors.MEDIA_KEYERR_OUTPUT_CODE;\r\n                                    msg += 'MEDIA_KEYERR_OUTPUT - ' + ProtectionErrors.MEDIA_KEYERR_OUTPUT_MESSAGE;\r\n                                    break;\r\n                                case 5:\r\n                                    code = ProtectionErrors.MEDIA_KEYERR_HARDWARECHANGE_CODE;\r\n                                    msg += 'MEDIA_KEYERR_HARDWARECHANGE - ' + ProtectionErrors.MEDIA_KEYERR_HARDWARECHANGE_MESSAGE;\r\n                                    break;\r\n                                case 6:\r\n                                    code = ProtectionErrors.MEDIA_KEYERR_DOMAIN_CODE;\r\n                                    msg += 'MEDIA_KEYERR_DOMAIN - ' + ProtectionErrors.MEDIA_KEYERR_DOMAIN_MESSAGE;\r\n                                    break;\r\n                            }\r\n                            msg += '  System Code = ' + event.systemCode;\r\n                            // TODO: Build error string based on key error\r\n                            eventBus.trigger(events.KEY_ERROR, { data: new DashJSError(code, msg, sessionToken) });\r\n                        } else {\r\n                            logger.error('No session token found for key error');\r\n                        }\r\n                        break;\r\n\r\n                    case api.keyadded:\r\n                        sessionToken = findSessionByID(sessions, event.sessionId);\r\n                        if (!sessionToken) {\r\n                            sessionToken = findSessionByID(pendingSessions, event.sessionId);\r\n                        }\r\n\r\n                        if (sessionToken) {\r\n                            logger.debug('DRM: Key added.');\r\n                            eventBus.trigger(events.KEY_ADDED, { data: sessionToken });//TODO not sure anything is using sessionToken? why there?\r\n                        } else {\r\n                            logger.debug('No session token found for key added');\r\n                        }\r\n                        break;\r\n\r\n                    case api.keymessage:\r\n                        // If this CDM does not support session IDs, we will be limited\r\n                        // to a single session\r\n                        moreSessionsAllowed = (event.sessionId !== null) && (event.sessionId !== undefined);\r\n\r\n                        // SessionIDs supported\r\n                        if (moreSessionsAllowed) {\r\n                            // Attempt to find an uninitialized token with this sessionID\r\n                            sessionToken = findSessionByID(sessions, event.sessionId);\r\n                            if (!sessionToken && pendingSessions.length > 0) {\r\n\r\n                                // This is the first message for our latest session, so set the\r\n                                // sessionID and add it to our list\r\n                                sessionToken = pendingSessions.shift();\r\n                                sessions.push(sessionToken);\r\n                                sessionToken.sessionID = event.sessionId;\r\n\r\n                                eventBus.trigger(events.KEY_SESSION_CREATED, { data: sessionToken });\r\n                            }\r\n                        } else if (pendingSessions.length > 0) { // SessionIDs not supported\r\n                            sessionToken = pendingSessions.shift();\r\n                            sessions.push(sessionToken);\r\n\r\n                            if (pendingSessions.length !== 0) {\r\n                                errHandler.error(new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_ERROR_CODE, ProtectionErrors.MEDIA_KEY_MESSAGE_ERROR_MESSAGE));\r\n                            }\r\n                        }\r\n\r\n                        if (sessionToken) {\r\n                            let message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\r\n\r\n                            // For ClearKey, the spec mandates that you pass this message to the\r\n                            // addKey method, so we always save it to the token since there is no\r\n                            // way to tell which key system is in use\r\n                            sessionToken.keyMessage = message;\r\n                            eventBus.trigger(events.INTERNAL_KEY_MESSAGE, { data: new KeyMessage(sessionToken, message, event.defaultURL) });\r\n\r\n                        } else {\r\n                            logger.warn('No session token found for key message');\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    /**\r\n     * Helper function to retrieve the stored session token based on a given\r\n     * sessionID value\r\n     *\r\n     * @param {Array} sessionArray - the array of sessions to search\r\n     * @param {*} sessionID - the sessionID to search for\r\n     * @returns {*} the session token with the given sessionID\r\n     */\r\n    function findSessionByID(sessionArray, sessionID) {\r\n        if (!sessionID || !sessionArray) {\r\n            return null;\r\n        } else {\r\n            const len = sessionArray.length;\r\n            for (let i = 0; i < len; i++) {\r\n                if (sessionArray[i].sessionID == sessionID) {\r\n                    return sessionArray[i];\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function removeEventListeners() {\r\n        videoElement.removeEventListener(api.keyerror, eventHandler);\r\n        videoElement.removeEventListener(api.needkey, eventHandler);\r\n        videoElement.removeEventListener(api.keymessage, eventHandler);\r\n        videoElement.removeEventListener(api.keyadded, eventHandler);\r\n    }\r\n\r\n    instance = {\r\n        getAllInitData: getAllInitData,\r\n        requestKeySystemAccess: requestKeySystemAccess,\r\n        getKeySystem: getKeySystem,\r\n        selectKeySystem: selectKeySystem,\r\n        setMediaElement: setMediaElement,\r\n        createKeySession: createKeySession,\r\n        updateKeySession: updateKeySession,\r\n        closeKeySession: closeKeySession,\r\n        setServerCertificate: setServerCertificate,\r\n        loadKeySession: loadKeySession,\r\n        removeKeySession: removeKeySession,\r\n        stop: reset,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nProtectionModel_01b.__dashjs_factory_name = 'ProtectionModel_01b';\r\nexport default dashjs.FactoryMaker.getClassFactory(ProtectionModel_01b); /* jshint ignore:line */\r\n",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Most recent EME implementation\r\n *\r\n * Implemented by Google Chrome v36+ (Windows, OSX, Linux)\r\n *\r\n * @implements ProtectionModel\r\n * @class\r\n */\r\nimport ProtectionKeyController from '../controllers/ProtectionKeyController';\r\nimport NeedKey from '../vo/NeedKey';\r\nimport ProtectionErrors from '../errors/ProtectionErrors';\r\nimport DashJSError from '../../vo/DashJSError';\r\nimport KeyMessage from '../vo/KeyMessage';\r\nimport KeySystemAccess from '../vo/KeySystemAccess';\r\nimport ProtectionConstants from '../../constants/ProtectionConstants';\r\n\r\nfunction ProtectionModel_21Jan2015(config) {\r\n\r\n    config = config || {};\r\n    const context = this.context;\r\n    const eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\r\n    const events = config.events;\r\n    const debug = config.debug;\r\n\r\n    let instance,\r\n        logger,\r\n        keySystem,\r\n        videoElement,\r\n        mediaKeys,\r\n        sessions,\r\n        eventHandler,\r\n        protectionKeyController;\r\n\r\n    function setup() {\r\n        logger = debug.getLogger(instance);\r\n        keySystem = null;\r\n        videoElement = null;\r\n        mediaKeys = null;\r\n        sessions = [];\r\n        protectionKeyController = ProtectionKeyController(context).getInstance();\r\n        eventHandler = createEventHandler();\r\n    }\r\n\r\n    function reset() {\r\n        const numSessions = sessions.length;\r\n        let session;\r\n\r\n        if (numSessions !== 0) {\r\n            // Called when we are done closing a session.  Success or fail\r\n            const done = function (session) {\r\n                removeSession(session);\r\n                if (sessions.length === 0) {\r\n                    if (videoElement) {\r\n                        videoElement.removeEventListener('encrypted', eventHandler);\r\n                        videoElement.setMediaKeys(null).then(function () {\r\n                            eventBus.trigger(events.TEARDOWN_COMPLETE);\r\n                        });\r\n                    } else {\r\n                        eventBus.trigger(events.TEARDOWN_COMPLETE);\r\n                    }\r\n                }\r\n            };\r\n            for (let i = 0; i < numSessions; i++) {\r\n                session = sessions[i];\r\n                (function (s) {\r\n                    // Override closed promise resolver\r\n                    session.session.closed.then(function () {\r\n                        done(s);\r\n                    });\r\n                    // Close the session and handle errors, otherwise promise\r\n                    // resolver above will be called\r\n                    closeKeySessionInternal(session).catch(function () {\r\n                        done(s);\r\n                    });\r\n\r\n                })(session);\r\n            }\r\n        } else {\r\n            eventBus.trigger(events.TEARDOWN_COMPLETE);\r\n        }\r\n    }\r\n\r\n    function stop() {\r\n        // Close and remove not usable sessions\r\n        let session;\r\n        for (let i = 0; i < sessions.length; i++) {\r\n            session = sessions[i];\r\n            if (!session.getUsable()) {\r\n                closeKeySessionInternal(session).catch(function () {\r\n                    removeSession(session);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    function getKeySystem() {\r\n        return keySystem;\r\n    }\r\n\r\n    function getAllInitData() {\r\n        const retVal = [];\r\n        for (let i = 0; i < sessions.length; i++) {\r\n            if (sessions[i].initData) {\r\n                retVal.push(sessions[i].initData);\r\n            }\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    function requestKeySystemAccess(ksConfigurations) {\r\n        requestKeySystemAccessInternal(ksConfigurations, 0);\r\n    }\r\n\r\n    function selectKeySystem(keySystemAccess) {\r\n        keySystemAccess.mksa.createMediaKeys().then(function (mkeys) {\r\n            keySystem = keySystemAccess.keySystem;\r\n            mediaKeys = mkeys;\r\n            if (videoElement) {\r\n                videoElement.setMediaKeys(mediaKeys).then(function () {\r\n                    eventBus.trigger(events.INTERNAL_KEY_SYSTEM_SELECTED);\r\n                });\r\n            } else {\r\n                eventBus.trigger(events.INTERNAL_KEY_SYSTEM_SELECTED);\r\n            }\r\n\r\n        }).catch(function () {\r\n            eventBus.trigger(events.INTERNAL_KEY_SYSTEM_SELECTED, { error: 'Error selecting keys system (' + keySystemAccess.keySystem.systemString + ')! Could not create MediaKeys -- TODO' });\r\n        });\r\n    }\r\n\r\n    function setMediaElement(mediaElement) {\r\n        if (videoElement === mediaElement)\r\n            return;\r\n\r\n        // Replacing the previous element\r\n        if (videoElement) {\r\n            videoElement.removeEventListener('encrypted', eventHandler);\r\n            if (videoElement.setMediaKeys) {\r\n                videoElement.setMediaKeys(null);\r\n            }\r\n        }\r\n\r\n        videoElement = mediaElement;\r\n\r\n        // Only if we are not detaching from the existing element\r\n        if (videoElement) {\r\n            videoElement.addEventListener('encrypted', eventHandler);\r\n            if (videoElement.setMediaKeys && mediaKeys) {\r\n                videoElement.setMediaKeys(mediaKeys);\r\n            }\r\n        }\r\n    }\r\n\r\n    function setServerCertificate(serverCertificate) {\r\n        if (!keySystem || !mediaKeys) {\r\n            throw new Error('Can not set server certificate until you have selected a key system');\r\n        }\r\n        mediaKeys.setServerCertificate(serverCertificate).then(function () {\r\n            logger.info('DRM: License server certificate successfully updated.');\r\n            eventBus.trigger(events.SERVER_CERTIFICATE_UPDATED);\r\n        }).catch(function (error) {\r\n            eventBus.trigger(events.SERVER_CERTIFICATE_UPDATED, { error: new DashJSError(ProtectionErrors.SERVER_CERTIFICATE_UPDATED_ERROR_CODE, ProtectionErrors.SERVER_CERTIFICATE_UPDATED_ERROR_MESSAGE + error.name) });\r\n        });\r\n    }\r\n\r\n    function createKeySession(initData, protData, sessionType) {\r\n        if (!keySystem || !mediaKeys) {\r\n            throw new Error('Can not create sessions until you have selected a key system');\r\n        }\r\n\r\n        const session = mediaKeys.createSession(sessionType);\r\n        const sessionToken = createSessionToken(session, initData, sessionType);\r\n        const ks = this.getKeySystem();\r\n\r\n        // Generate initial key request.\r\n        // keyids type is used for clearkey when keys are provided directly in the protection data and then request to a license server is not needed\r\n        const dataType = ks.systemString === ProtectionConstants.CLEARKEY_KEYSTEM_STRING && (initData ||  (protData && protData.clearkeys)) ? 'keyids' : 'cenc';\r\n        session.generateRequest(dataType, initData).then(function () {\r\n            logger.debug('DRM: Session created.  SessionID = ' + sessionToken.getSessionID());\r\n            eventBus.trigger(events.KEY_SESSION_CREATED, { data: sessionToken });\r\n        }).catch(function (error) {\r\n            // TODO: Better error string\r\n            removeSession(sessionToken);\r\n            eventBus.trigger(events.KEY_SESSION_CREATED, {\r\n                data: null,\r\n                error: new DashJSError(ProtectionErrors.KEY_SESSION_CREATED_ERROR_CODE, ProtectionErrors.KEY_SESSION_CREATED_ERROR_MESSAGE + 'Error generating key request -- ' + error.name)\r\n            });\r\n        });\r\n    }\r\n\r\n    function updateKeySession(sessionToken, message) {\r\n        const session = sessionToken.session;\r\n\r\n        // Send our request to the key session\r\n        if (protectionKeyController.isClearKey(keySystem)) {\r\n            message = message.toJWK();\r\n        }\r\n        session.update(message).catch(function (error) {\r\n            eventBus.trigger(events.KEY_ERROR, { data: new DashJSError(ProtectionErrors.MEDIA_KEYERR_CODE, 'Error sending update() message! ' + error.name, sessionToken) });\r\n        });\r\n    }\r\n\r\n    function loadKeySession(sessionID, initData, sessionType) {\r\n        if (!keySystem || !mediaKeys) {\r\n            throw new Error('Can not load sessions until you have selected a key system');\r\n        }\r\n\r\n        // Check if session Id is not already loaded or loading\r\n        for (let i = 0; i < sessions.length; i++) {\r\n            if (sessionID === sessions[i].sessionId) {\r\n                logger.warn('DRM: Ignoring session ID because we have already seen it!');\r\n                return;\r\n            }\r\n        }\r\n\r\n        const session = mediaKeys.createSession(sessionType);\r\n        const sessionToken = createSessionToken(session, initData, sessionType, sessionID);\r\n\r\n        // Load persisted session data into our newly created session object\r\n        session.load(sessionID).then(function (success) {\r\n            if (success) {\r\n                logger.debug('DRM: Session loaded.  SessionID = ' + sessionToken.getSessionID());\r\n                eventBus.trigger(events.KEY_SESSION_CREATED, { data: sessionToken });\r\n            } else {\r\n                removeSession(sessionToken);\r\n                eventBus.trigger(events.KEY_SESSION_CREATED, {\r\n                    data: null,\r\n                    error: new DashJSError(ProtectionErrors.KEY_SESSION_CREATED_ERROR_CODE, ProtectionErrors.KEY_SESSION_CREATED_ERROR_MESSAGE + 'Could not load session! Invalid Session ID (' + sessionID + ')')\r\n                });\r\n            }\r\n        }).catch(function (error) {\r\n            removeSession(sessionToken);\r\n            eventBus.trigger(events.KEY_SESSION_CREATED, {\r\n                data: null,\r\n                error: new DashJSError(ProtectionErrors.KEY_SESSION_CREATED_ERROR_CODE, ProtectionErrors.KEY_SESSION_CREATED_ERROR_MESSAGE + 'Could not load session (' + sessionID + ')! ' + error.name)\r\n            });\r\n        });\r\n    }\r\n\r\n    function removeKeySession(sessionToken) {\r\n        const session = sessionToken.session;\r\n\r\n        session.remove().then(function () {\r\n            logger.debug('DRM: Session removed.  SessionID = ' + sessionToken.getSessionID());\r\n            eventBus.trigger(events.KEY_SESSION_REMOVED, { data: sessionToken.getSessionID() });\r\n        }, function (error) {\r\n            eventBus.trigger(events.KEY_SESSION_REMOVED, {\r\n                data: null,\r\n                error: 'Error removing session (' + sessionToken.getSessionID() + '). ' + error.name\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    function closeKeySession(sessionToken) {\r\n        // Send our request to the key session\r\n        closeKeySessionInternal(sessionToken).catch(function (error) {\r\n            removeSession(sessionToken);\r\n            eventBus.trigger(events.KEY_SESSION_CLOSED, {\r\n                data: null,\r\n                error: 'Error closing session (' + sessionToken.getSessionID() + ') ' + error.name\r\n            });\r\n        });\r\n    }\r\n\r\n    function requestKeySystemAccessInternal(ksConfigurations, idx) {\r\n\r\n        if (navigator.requestMediaKeySystemAccess === undefined ||\r\n            typeof navigator.requestMediaKeySystemAccess !== 'function') {\r\n            eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { error: 'Insecure origins are not allowed' });\r\n            return;\r\n        }\r\n\r\n        (function (i) {\r\n            const keySystem = ksConfigurations[i].ks;\r\n            const configs = ksConfigurations[i].configs;\r\n            let systemString = keySystem.systemString;\r\n\r\n            // PATCH to support persistent licenses on Edge browser (see issue #2658)\r\n            if (systemString === ProtectionConstants.PLAYREADY_KEYSTEM_STRING && configs[0].persistentState === 'required') {\r\n                systemString += '.recommendation';\r\n            }\r\n\r\n            navigator.requestMediaKeySystemAccess(systemString, configs).then(function (mediaKeySystemAccess) {\r\n                // Chrome 40 does not currently implement MediaKeySystemAccess.getConfiguration()\r\n                const configuration = (typeof mediaKeySystemAccess.getConfiguration === 'function') ?\r\n                    mediaKeySystemAccess.getConfiguration() : null;\r\n                const keySystemAccess = new KeySystemAccess(keySystem, configuration);\r\n                keySystemAccess.mksa = mediaKeySystemAccess;\r\n                eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { data: keySystemAccess });\r\n\r\n            }).catch(function (error) {\r\n                if (++i < ksConfigurations.length) {\r\n                    requestKeySystemAccessInternal(ksConfigurations, i);\r\n                } else {\r\n                    eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { error: 'Key system access denied! ' + error.message });\r\n                }\r\n            });\r\n        })(idx);\r\n    }\r\n\r\n    function closeKeySessionInternal(sessionToken) {\r\n        const session = sessionToken.session;\r\n\r\n        // Remove event listeners\r\n        session.removeEventListener('keystatuseschange', sessionToken);\r\n        session.removeEventListener('message', sessionToken);\r\n\r\n        // Send our request to the key session\r\n        return session.close();\r\n    }\r\n\r\n    // This is our main event handler for all desired HTMLMediaElement events\r\n    // related to EME.  These events are translated into our API-independent\r\n    // versions of the same events\r\n    function createEventHandler() {\r\n        return {\r\n            handleEvent: function (event) {\r\n                switch (event.type) {\r\n                    case 'encrypted':\r\n                        if (event.initData) {\r\n                            let initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\r\n                            eventBus.trigger(events.NEED_KEY, { key: new NeedKey(initData, event.initDataType) });\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    function removeSession(token) {\r\n        // Remove from our session list\r\n        for (let i = 0; i < sessions.length; i++) {\r\n            if (sessions[i] === token) {\r\n                sessions.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    function parseKeyStatus(args) {\r\n        // Edge and Chrome implement different version of keystatues, param are not on same order\r\n        let status, keyId;\r\n        if (args && args.length > 0) {\r\n            if (args[0]) {\r\n                if (typeof args[0] === 'string') {\r\n                    status = args[0];\r\n                } else {\r\n                    keyId = args[0];\r\n                }\r\n            }\r\n\r\n            if (args[1]) {\r\n                if (typeof args[1] === 'string') {\r\n                    status = args[1];\r\n                } else {\r\n                    keyId = args[1];\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            status: status,\r\n            keyId: keyId\r\n        };\r\n    }\r\n\r\n    // Function to create our session token objects which manage the EME\r\n    // MediaKeySession and session-specific event handler\r\n    function createSessionToken(session, initData, sessionType, sessionID) {\r\n        const token = { // Implements SessionToken\r\n            session: session,\r\n            initData: initData,\r\n            sessionId: sessionID,\r\n\r\n            // This is our main event handler for all desired MediaKeySession events\r\n            // These events are translated into our API-independent versions of the\r\n            // same events\r\n            handleEvent: function (event) {\r\n                switch (event.type) {\r\n                    case 'keystatuseschange':\r\n                        eventBus.trigger(events.KEY_STATUSES_CHANGED, { data: this });\r\n                        event.target.keyStatuses.forEach(function () {\r\n                            let keyStatus = parseKeyStatus(arguments);\r\n                            switch (keyStatus.status) {\r\n                                case 'expired':\r\n                                    eventBus.trigger(events.INTERNAL_KEY_STATUS_CHANGED, { error: new DashJSError(ProtectionErrors.KEY_STATUS_CHANGED_EXPIRED_ERROR_CODE, ProtectionErrors.KEY_STATUS_CHANGED_EXPIRED_ERROR_MESSAGE) });\r\n                                    break;\r\n                                default:\r\n                                    eventBus.trigger(events.INTERNAL_KEY_STATUS_CHANGED, keyStatus);\r\n                                    break;\r\n                            }\r\n                        });\r\n                        break;\r\n\r\n                    case 'message':\r\n                        let message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\r\n                        eventBus.trigger(events.INTERNAL_KEY_MESSAGE, { data: new KeyMessage(this, message, undefined, event.messageType) });\r\n                        break;\r\n                }\r\n            },\r\n\r\n            getSessionID: function () {\r\n                return session.sessionId;\r\n            },\r\n\r\n            getExpirationTime: function () {\r\n                return session.expiration;\r\n            },\r\n\r\n            getKeyStatuses: function () {\r\n                return session.keyStatuses;\r\n            },\r\n\r\n            getUsable: function () {\r\n                let usable = false;\r\n                session.keyStatuses.forEach(function () {\r\n                    let keyStatus = parseKeyStatus(arguments);\r\n                    if (keyStatus.status === 'usable') {\r\n                        usable = true;\r\n                    }\r\n                });\r\n                return usable;\r\n            },\r\n\r\n            getSessionType: function () {\r\n                return sessionType;\r\n            }\r\n        };\r\n\r\n        // Add all event listeners\r\n        session.addEventListener('keystatuseschange', token);\r\n        session.addEventListener('message', token);\r\n\r\n        // Register callback for session closed Promise\r\n        session.closed.then(function () {\r\n            removeSession(token);\r\n            logger.debug('DRM: Session closed.  SessionID = ' + token.getSessionID());\r\n            eventBus.trigger(events.KEY_SESSION_CLOSED, { data: token.getSessionID() });\r\n        });\r\n\r\n        // Add to our session list\r\n        sessions.push(token);\r\n\r\n        return token;\r\n    }\r\n\r\n    instance = {\r\n        getAllInitData: getAllInitData,\r\n        requestKeySystemAccess: requestKeySystemAccess,\r\n        getKeySystem: getKeySystem,\r\n        selectKeySystem: selectKeySystem,\r\n        setMediaElement: setMediaElement,\r\n        setServerCertificate: setServerCertificate,\r\n        createKeySession: createKeySession,\r\n        updateKeySession: updateKeySession,\r\n        loadKeySession: loadKeySession,\r\n        removeKeySession: removeKeySession,\r\n        closeKeySession: closeKeySession,\r\n        stop: stop,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nProtectionModel_21Jan2015.__dashjs_factory_name = 'ProtectionModel_21Jan2015';\r\nexport default dashjs.FactoryMaker.getClassFactory(ProtectionModel_21Jan2015); /* jshint ignore:line */\r\n",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Implementation of the EME APIs as of the 3 Feb 2014 state of the specification.\r\n *\r\n * Implemented by Internet Explorer 11 (Windows 8.1)\r\n *\r\n * @implements ProtectionModel\r\n * @class\r\n */\r\n\r\nimport ProtectionKeyController from '../controllers/ProtectionKeyController';\r\nimport NeedKey from '../vo/NeedKey';\r\nimport DashJSError from '../../vo/DashJSError';\r\nimport ProtectionErrors from '../errors/ProtectionErrors';\r\nimport KeyMessage from '../vo/KeyMessage';\r\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration';\r\nimport KeySystemAccess from '../vo/KeySystemAccess';\r\n\r\nfunction ProtectionModel_3Feb2014(config) {\r\n\r\n    config = config || {};\r\n    const context = this.context;\r\n    const eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\r\n    const events = config.events;\r\n    const debug = config.debug;\r\n    const api = config.api;\r\n\r\n    let instance,\r\n        logger,\r\n        videoElement,\r\n        keySystem,\r\n        mediaKeys,\r\n        keySystemAccess,\r\n        sessions,\r\n        eventHandler,\r\n        protectionKeyController;\r\n\r\n    function setup() {\r\n        logger = debug.getLogger(instance);\r\n        videoElement = null;\r\n        keySystem = null;\r\n        mediaKeys = null;\r\n        keySystemAccess = null;\r\n        sessions = [];\r\n        protectionKeyController = ProtectionKeyController(context).getInstance();\r\n        eventHandler = createEventHandler();\r\n    }\r\n\r\n    function reset() {\r\n        try {\r\n            for (let i = 0; i < sessions.length; i++) {\r\n                closeKeySession(sessions[i]);\r\n            }\r\n            if (videoElement) {\r\n                videoElement.removeEventListener(api.needkey, eventHandler);\r\n            }\r\n            eventBus.trigger(events.TEARDOWN_COMPLETE);\r\n        } catch (error) {\r\n            eventBus.trigger(events.TEARDOWN_COMPLETE, { error: 'Error tearing down key sessions and MediaKeys! -- ' + error.message });\r\n        }\r\n    }\r\n\r\n    function getKeySystem() {\r\n        return keySystem;\r\n    }\r\n\r\n    function getAllInitData() {\r\n        const retVal = [];\r\n        for (let i = 0; i < sessions.length; i++) {\r\n            retVal.push(sessions[i].initData);\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    function requestKeySystemAccess(ksConfigurations) {\r\n\r\n        // Try key systems in order, first one with supported key system configuration\r\n        // is used\r\n        let found = false;\r\n        for (let ksIdx = 0; ksIdx < ksConfigurations.length; ksIdx++) {\r\n            const systemString = ksConfigurations[ksIdx].ks.systemString;\r\n            const configs = ksConfigurations[ksIdx].configs;\r\n            let supportedAudio = null;\r\n            let supportedVideo = null;\r\n\r\n            // Try key system configs in order, first one with supported audio/video\r\n            // is used\r\n            for (let configIdx = 0; configIdx < configs.length; configIdx++) {\r\n                const audios = configs[configIdx].audioCapabilities;\r\n                const videos = configs[configIdx].videoCapabilities;\r\n\r\n                // Look for supported audio container/codecs\r\n                if (audios && audios.length !== 0) {\r\n                    supportedAudio = []; // Indicates that we have a requested audio config\r\n                    for (let audioIdx = 0; audioIdx < audios.length; audioIdx++) {\r\n                        if (window[api.MediaKeys].isTypeSupported(systemString, audios[audioIdx].contentType)) {\r\n                            supportedAudio.push(audios[audioIdx]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Look for supported video container/codecs\r\n                if (videos && videos.length !== 0) {\r\n                    supportedVideo = []; // Indicates that we have a requested video config\r\n                    for (let videoIdx = 0; videoIdx < videos.length; videoIdx++) {\r\n                        if (window[api.MediaKeys].isTypeSupported(systemString, videos[videoIdx].contentType)) {\r\n                            supportedVideo.push(videos[videoIdx]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // No supported audio or video in this configuration OR we have\r\n                // requested audio or video configuration that is not supported\r\n                if ((!supportedAudio && !supportedVideo) ||\r\n                    (supportedAudio && supportedAudio.length === 0) ||\r\n                    (supportedVideo && supportedVideo.length === 0)) {\r\n                    continue;\r\n                }\r\n\r\n                // This configuration is supported\r\n                found = true;\r\n                const ksConfig = new KeySystemConfiguration(supportedAudio, supportedVideo);\r\n                const ks = protectionKeyController.getKeySystemBySystemString(systemString);\r\n                eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { data: new KeySystemAccess(ks, ksConfig) });\r\n                break;\r\n            }\r\n        }\r\n        if (!found) {\r\n            eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { error: 'Key system access denied! -- No valid audio/video content configurations detected!' });\r\n        }\r\n    }\r\n\r\n    function selectKeySystem(ksAccess) {\r\n        try {\r\n            mediaKeys = ksAccess.mediaKeys = new window[api.MediaKeys](ksAccess.keySystem.systemString);\r\n            keySystem = ksAccess.keySystem;\r\n            keySystemAccess = ksAccess;\r\n            if (videoElement) {\r\n                setMediaKeys();\r\n            }\r\n            eventBus.trigger(events.INTERNAL_KEY_SYSTEM_SELECTED);\r\n        } catch (error) {\r\n            eventBus.trigger(events.INTERNAL_KEY_SYSTEM_SELECTED, { error: 'Error selecting keys system (' + keySystem.systemString + ')! Could not create MediaKeys -- TODO' });\r\n        }\r\n    }\r\n\r\n    function setMediaElement(mediaElement) {\r\n        if (videoElement === mediaElement)\r\n            return;\r\n\r\n        // Replacing the previous element\r\n        if (videoElement) {\r\n            videoElement.removeEventListener(api.needkey, eventHandler);\r\n        }\r\n\r\n        videoElement = mediaElement;\r\n\r\n        // Only if we are not detaching from the existing element\r\n        if (videoElement) {\r\n            videoElement.addEventListener(api.needkey, eventHandler);\r\n            if (mediaKeys) {\r\n                setMediaKeys();\r\n            }\r\n        }\r\n    }\r\n\r\n    function createKeySession(initData, protData, sessionType, cdmData) {\r\n        if (!keySystem || !mediaKeys || !keySystemAccess) {\r\n            throw new Error('Can not create sessions until you have selected a key system');\r\n        }\r\n\r\n        // Use the first video capability for the contentType.\r\n        // TODO:  Not sure if there is a way to concatenate all capability data into a RFC6386-compatible format\r\n\r\n        // If player is trying to playback Audio only stream - don't error out.\r\n        let capabilities = null;\r\n\r\n        if (keySystemAccess.ksConfiguration.videoCapabilities && keySystemAccess.ksConfiguration.videoCapabilities.length > 0) {\r\n            capabilities = keySystemAccess.ksConfiguration.videoCapabilities[0];\r\n        }\r\n\r\n        if (capabilities === null && keySystemAccess.ksConfiguration.audioCapabilities && keySystemAccess.ksConfiguration.audioCapabilities.length > 0) {\r\n            capabilities = keySystemAccess.ksConfiguration.audioCapabilities[0];\r\n        }\r\n\r\n        if (capabilities === null) {\r\n            throw new Error('Can not create sessions for unknown content types.');\r\n        }\r\n\r\n        const contentType = capabilities.contentType;\r\n        const session = mediaKeys.createSession(contentType, new Uint8Array(initData), cdmData ? new Uint8Array(cdmData) : null);\r\n        const sessionToken = createSessionToken(session, initData);\r\n\r\n        // Add all event listeners\r\n        session.addEventListener(api.error, sessionToken);\r\n        session.addEventListener(api.message, sessionToken);\r\n        session.addEventListener(api.ready, sessionToken);\r\n        session.addEventListener(api.close, sessionToken);\r\n\r\n        // Add to our session list\r\n        sessions.push(sessionToken);\r\n        logger.debug('DRM: Session created.  SessionID = ' + sessionToken.getSessionID());\r\n        eventBus.trigger(events.KEY_SESSION_CREATED, { data: sessionToken });\r\n    }\r\n\r\n    function updateKeySession(sessionToken, message) {\r\n        const session = sessionToken.session;\r\n\r\n        if (!protectionKeyController.isClearKey(keySystem)) {\r\n            // Send our request to the key session\r\n            session.update(new Uint8Array(message));\r\n        } else {\r\n            // For clearkey, message is a ClearKeyKeySet\r\n            session.update(new Uint8Array(message.toJWK()));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Close the given session and release all associated keys.  Following\r\n     * this call, the sessionToken becomes invalid\r\n     *\r\n     * @param {Object} sessionToken - the session token\r\n     */\r\n    function closeKeySession(sessionToken) {\r\n        const session = sessionToken.session;\r\n\r\n        // Remove event listeners\r\n        session.removeEventListener(api.error, sessionToken);\r\n        session.removeEventListener(api.message, sessionToken);\r\n        session.removeEventListener(api.ready, sessionToken);\r\n        session.removeEventListener(api.close, sessionToken);\r\n\r\n        // Remove from our session list\r\n        for (let i = 0; i < sessions.length; i++) {\r\n            if (sessions[i] === sessionToken) {\r\n                sessions.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Send our request to the key session\r\n        session[api.release]();\r\n    }\r\n\r\n    function setServerCertificate(/*serverCertificate*/) { /* Not supported */ }\r\n    function loadKeySession(/*sessionID*/) { /* Not supported */ }\r\n    function removeKeySession(/*sessionToken*/) { /* Not supported */ }\r\n\r\n\r\n    function createEventHandler() {\r\n        return {\r\n            handleEvent: function (event) {\r\n                switch (event.type) {\r\n\r\n                    case api.needkey:\r\n                        if (event.initData) {\r\n                            const initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\r\n                            eventBus.trigger(events.NEED_KEY, { key: new NeedKey(initData, 'cenc') });\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    // IE11 does not let you set MediaKeys until it has entered a certain\r\n    // readyState, so we need this logic to ensure we don't set the keys\r\n    // too early\r\n    function setMediaKeys() {\r\n        let boundDoSetKeys = null;\r\n        const doSetKeys = function () {\r\n            videoElement.removeEventListener('loadedmetadata', boundDoSetKeys);\r\n            videoElement[api.setMediaKeys](mediaKeys);\r\n            eventBus.trigger(events.VIDEO_ELEMENT_SELECTED);\r\n        };\r\n        if (videoElement.readyState >= 1) {\r\n            doSetKeys();\r\n        } else {\r\n            boundDoSetKeys = doSetKeys.bind(this);\r\n            videoElement.addEventListener('loadedmetadata', boundDoSetKeys);\r\n        }\r\n\r\n    }\r\n\r\n    // Function to create our session token objects which manage the EME\r\n    // MediaKeySession and session-specific event handler\r\n    function createSessionToken(keySession, initData) {\r\n        return {\r\n            // Implements SessionToken\r\n            session: keySession,\r\n            initData: initData,\r\n\r\n            getSessionID: function () {\r\n                return this.session.sessionId;\r\n            },\r\n\r\n            getExpirationTime: function () {\r\n                return NaN;\r\n            },\r\n\r\n            getSessionType: function () {\r\n                return 'temporary';\r\n            },\r\n            // This is our main event handler for all desired MediaKeySession events\r\n            // These events are translated into our API-independent versions of the\r\n            // same events\r\n            handleEvent: function (event) {\r\n                switch (event.type) {\r\n                    case api.error:\r\n                        let errorStr = 'KeyError'; // TODO: Make better string from event\r\n                        eventBus.trigger(events.KEY_ERROR, { data: new DashJSError(ProtectionErrors.MEDIA_KEYERR_CODE, errorStr, this) });\r\n                        break;\r\n                    case api.message:\r\n                        let message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\r\n                        eventBus.trigger(events.INTERNAL_KEY_MESSAGE, { data: new KeyMessage(this, message, event.destinationURL) });\r\n                        break;\r\n                    case api.ready:\r\n                        logger.debug('DRM: Key added.');\r\n                        eventBus.trigger(events.KEY_ADDED);\r\n                        break;\r\n\r\n                    case api.close:\r\n                        logger.debug('DRM: Session closed.  SessionID = ' + this.getSessionID());\r\n                        eventBus.trigger(events.KEY_SESSION_CLOSED, { data: this.getSessionID() });\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    instance = {\r\n        getAllInitData: getAllInitData,\r\n        requestKeySystemAccess: requestKeySystemAccess,\r\n        getKeySystem: getKeySystem,\r\n        selectKeySystem: selectKeySystem,\r\n        setMediaElement: setMediaElement,\r\n        createKeySession: createKeySession,\r\n        updateKeySession: updateKeySession,\r\n        closeKeySession: closeKeySession,\r\n        setServerCertificate: setServerCertificate,\r\n        loadKeySession: loadKeySession,\r\n        removeKeySession: removeKeySession,\r\n        stop: reset,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nProtectionModel_3Feb2014.__dashjs_factory_name = 'ProtectionModel_3Feb2014';\r\nexport default dashjs.FactoryMaker.getClassFactory(ProtectionModel_3Feb2014); /* jshint ignore:line */\r\n",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * CableLabs ClearKey license server implementation\r\n *\r\n * For testing purposes and evaluating potential uses for ClearKey, we have developed\r\n * a dirt-simple API for requesting ClearKey licenses from a remote server.\r\n *\r\n * @implements LicenseServer\r\n * @class\r\n */\r\nimport KeyPair from '../vo/KeyPair';\r\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet';\r\n\r\nfunction ClearKey() {\r\n\r\n    let instance;\r\n\r\n    function getServerURLFromMessage(url /* message, messageType*/) {\r\n        return url;\r\n    }\r\n\r\n    function getHTTPMethod(/*messageType*/) {\r\n        return 'POST';\r\n    }\r\n\r\n    function getResponseType(/*keySystemStr*/) {\r\n        return 'json';\r\n    }\r\n\r\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\r\n        if (!serverResponse.hasOwnProperty('keys')) {\r\n            return null;\r\n        }\r\n        let keyPairs = [];\r\n        for (let i = 0; i < serverResponse.keys.length; i++) {\r\n            let keypair = serverResponse.keys[i];\r\n            let keyid = keypair.kid.replace(/=/g, '');\r\n            let key = keypair.k.replace(/=/g, '');\r\n\r\n            keyPairs.push(new KeyPair(keyid, key));\r\n        }\r\n        return new ClearKeyKeySet(keyPairs);\r\n    }\r\n\r\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\r\n        return String.fromCharCode.apply(null, new Uint8Array(serverResponse));\r\n    }\r\n\r\n    instance = {\r\n        getServerURLFromMessage: getServerURLFromMessage,\r\n        getHTTPMethod: getHTTPMethod,\r\n        getResponseType: getResponseType,\r\n        getLicenseMessage: getLicenseMessage,\r\n        getErrorResponse: getErrorResponse\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nClearKey.__dashjs_factory_name = 'ClearKey';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(ClearKey); /* jshint ignore:line */\r\n",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * CastLabs DRMToday License Server implementation\r\n *\r\n * @implements LicenseServer\r\n * @class\r\n */\r\n\r\nimport ProtectionConstants from '../../constants/ProtectionConstants';\r\n\r\nfunction DRMToday(config) {\r\n\r\n    config = config || {};\r\n    const BASE64 = config.BASE64;\r\n\r\n    const keySystems = {};\r\n    keySystems[ProtectionConstants.WIDEVINE_KEYSTEM_STRING] = {\r\n        responseType: 'json',\r\n        getLicenseMessage: function (response) {\r\n            return BASE64.decodeArray(response.license);\r\n        },\r\n        getErrorResponse: function (response) {\r\n            return response;\r\n        }\r\n    };\r\n    keySystems[ProtectionConstants.PLAYREADY_KEYSTEM_STRING] = {\r\n        responseType: 'arraybuffer',\r\n        getLicenseMessage: function (response) {\r\n            return response;\r\n        },\r\n        getErrorResponse: function (response) {\r\n            return String.fromCharCode.apply(null, new Uint8Array(response));\r\n        }\r\n    };\r\n\r\n    let instance;\r\n\r\n    function checkConfig() {\r\n        if (!BASE64 || !BASE64.hasOwnProperty('decodeArray')) {\r\n            throw new Error('Missing config parameter(s)');\r\n        }\r\n    }\r\n\r\n    function getServerURLFromMessage(url /*, message, messageType*/) {\r\n        return url;\r\n    }\r\n\r\n    function getHTTPMethod(/*messageType*/) {\r\n        return 'POST';\r\n    }\r\n\r\n    function getResponseType(keySystemStr/*, messageType*/) {\r\n        return keySystems[keySystemStr].responseType;\r\n    }\r\n\r\n    function getLicenseMessage(serverResponse, keySystemStr/*, messageType*/) {\r\n        checkConfig();\r\n        return keySystems[keySystemStr].getLicenseMessage(serverResponse);\r\n    }\r\n\r\n    function getErrorResponse(serverResponse, keySystemStr/*, messageType*/) {\r\n        return keySystems[keySystemStr].getErrorResponse(serverResponse);\r\n    }\r\n\r\n    instance = {\r\n        getServerURLFromMessage: getServerURLFromMessage,\r\n        getHTTPMethod: getHTTPMethod,\r\n        getResponseType: getResponseType,\r\n        getLicenseMessage: getLicenseMessage,\r\n        getErrorResponse: getErrorResponse\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nDRMToday.__dashjs_factory_name = 'DRMToday';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(DRMToday); /* jshint ignore:line */",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/* global escape: true */\r\n\r\n/**\r\n * Microsoft PlayReady Test License Server\r\n *\r\n * For testing content that uses the PlayReady test server at\r\n *\r\n * @implements LicenseServer\r\n * @class\r\n * @ignore\r\n */\r\n\r\nfunction PlayReady() {\r\n\r\n    let instance;\r\n\r\n    const soap = 'http://schemas.xmlsoap.org/soap/envelope/';\r\n\r\n    function uintToString(arrayBuffer) {\r\n        const encodedString = String.fromCharCode.apply(null, new Uint8Array(arrayBuffer));\r\n        const decodedString = decodeURIComponent(escape(encodedString));\r\n        return decodedString;\r\n    }\r\n\r\n    function parseServerResponse(serverResponse) {\r\n        if (window.DOMParser) {\r\n            const stringResponse = uintToString(serverResponse);\r\n            const parser = new window.DOMParser();\r\n            const xmlDoc = parser.parseFromString(stringResponse, 'text/xml');\r\n            const envelope = xmlDoc ? xmlDoc.getElementsByTagNameNS(soap, 'Envelope')[0] : null;\r\n            const body = envelope ? envelope.getElementsByTagNameNS(soap, 'Body')[0] : null;\r\n            const fault = body ? body.getElementsByTagNameNS(soap, 'Fault')[0] : null;\r\n\r\n            if (fault) {\r\n                return null;\r\n            }\r\n        }\r\n        return serverResponse;\r\n    }\r\n\r\n    function parseErrorResponse(serverResponse) {\r\n        let faultstring = '';\r\n        let statusCode = '';\r\n        let message = '';\r\n        let idStart = -1;\r\n        let idEnd = -1;\r\n\r\n        if (window.DOMParser) {\r\n            const stringResponse = uintToString(serverResponse);\r\n            const parser = new window.DOMParser();\r\n            const xmlDoc = parser.parseFromString(stringResponse, 'text/xml');\r\n            const envelope = xmlDoc ? xmlDoc.getElementsByTagNameNS(soap, 'Envelope')[0] : null;\r\n            const body = envelope ? envelope.getElementsByTagNameNS(soap, 'Body')[0] : null;\r\n            const fault = body ? body.getElementsByTagNameNS(soap, 'Fault')[0] : null;\r\n            const detail = fault ? fault.getElementsByTagName('detail')[0] : null;\r\n            const exception = detail ? detail.getElementsByTagName('Exception')[0] : null;\r\n            let node = null;\r\n\r\n            if (fault === null) {\r\n                return stringResponse;\r\n            }\r\n\r\n            node = fault.getElementsByTagName('faultstring')[0].firstChild;\r\n            faultstring = node ? node.nodeValue : null;\r\n\r\n            if (exception !== null) {\r\n                node = exception.getElementsByTagName('StatusCode')[0];\r\n                statusCode = node ? node.firstChild.nodeValue : null;\r\n                node = exception.getElementsByTagName('Message')[0];\r\n                message = node ? node.firstChild.nodeValue : null;\r\n                idStart = message ? message.lastIndexOf('[') + 1 : -1;\r\n                idEnd = message ? message.indexOf(']') : -1;\r\n                message = message ? message.substring(idStart, idEnd) : '';\r\n            }\r\n        }\r\n\r\n        let errorString = `code: ${statusCode}, name: ${faultstring}`;\r\n        if (message) {\r\n            errorString += `, message: ${message}`;\r\n        }\r\n\r\n        return errorString;\r\n    }\r\n\r\n    function getServerURLFromMessage(url /*, message, messageType*/) {\r\n        return url;\r\n    }\r\n\r\n    function getHTTPMethod(/*messageType*/) {\r\n        return 'POST';\r\n    }\r\n\r\n    function getResponseType(/*keySystemStr, messageType*/) {\r\n        return 'arraybuffer';\r\n    }\r\n\r\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\r\n        return parseServerResponse.call(this, serverResponse);\r\n    }\r\n\r\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\r\n        return parseErrorResponse.call(this, serverResponse);\r\n    }\r\n\r\n    instance = {\r\n        getServerURLFromMessage: getServerURLFromMessage,\r\n        getHTTPMethod: getHTTPMethod,\r\n        getResponseType: getResponseType,\r\n        getLicenseMessage: getLicenseMessage,\r\n        getErrorResponse: getErrorResponse\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nPlayReady.__dashjs_factory_name = 'PlayReady';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(PlayReady); /* jshint ignore:line */",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction Widevine() {\r\n\r\n    let instance;\r\n\r\n    function getServerURLFromMessage(url /*, message, messageType*/) {\r\n        return url;\r\n    }\r\n\r\n    function getHTTPMethod(/*messageType*/) {\r\n        return 'POST';\r\n    }\r\n\r\n    function getResponseType(/*keySystemStr, messageType*/) {\r\n        return 'arraybuffer';\r\n    }\r\n\r\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\r\n        return serverResponse;\r\n    }\r\n\r\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\r\n        return String.fromCharCode.apply(null, new Uint8Array(serverResponse));\r\n    }\r\n\r\n    instance = {\r\n        getServerURLFromMessage: getServerURLFromMessage,\r\n        getHTTPMethod: getHTTPMethod,\r\n        getResponseType: getResponseType,\r\n        getLicenseMessage: getLicenseMessage,\r\n        getErrorResponse: getErrorResponse\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nWidevine.__dashjs_factory_name = 'Widevine';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(Widevine); /* jshint ignore:line */",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @classdesc A collection of ClearKey encryption keys with an (optional) associated\r\n *  type\r\n * @ignore\r\n */\r\nclass ClearKeyKeySet {\r\n    /**\r\n     * @param {Array.<KeyPair>} keyPairs\r\n     * @param {string} type the type of keys in this set.  One of either 'persistent'\r\n     * or 'temporary'.  Can also be null or undefined.\r\n     * @class\r\n     * @ignore\r\n     */\r\n    constructor(keyPairs, type) {\r\n        if (type && type !== 'persistent' && type !== 'temporary')\r\n            throw new Error('Invalid ClearKey key set type!  Must be one of \\'persistent\\' or \\'temporary\\'');\r\n        this.keyPairs = keyPairs;\r\n        this.type = type;\r\n    }\r\n\r\n    /**\r\n     * Convert this key set to its JSON Web Key (JWK) representation\r\n     *\r\n     * @return {ArrayBuffer} JWK object UTF-8 encoded as ArrayBuffer\r\n     */\r\n    toJWK() {\r\n        let i;\r\n        let numKeys = this.keyPairs.length;\r\n        let jwk = {keys: []};\r\n\r\n        for (i = 0; i < numKeys; i++) {\r\n            let key = {\r\n                kty: 'oct',\r\n                alg: 'A128KW',\r\n                kid: this.keyPairs[i].keyID,\r\n                k: this.keyPairs[i].key\r\n            };\r\n            jwk.keys.push(key);\r\n        }\r\n        if (this.type) {\r\n            jwk.type = this.type;\r\n        }\r\n        let jwkString = JSON.stringify(jwk);\r\n        const len = jwkString.length;\r\n\r\n        // Convert JSON string to ArrayBuffer\r\n        let buf = new ArrayBuffer(len);\r\n        let bView = new Uint8Array(buf);\r\n        for (i = 0; i < len; i++)\r\n            bView[i] = jwkString.charCodeAt(i);\r\n        return buf;\r\n    }\r\n}\r\n\r\nexport default ClearKeyKeySet;\r\n",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc EME-independent KeyMessage\r\n * @ignore\r\n */\r\nclass KeyMessage {\r\n    /**\r\n     * @param {SessionToken} sessionToken the session\r\n     * to which the key message is associated\r\n     * @param {ArrayBuffer} message the key message\r\n     * @param {string} defaultURL license acquisition URL provided by the CDM\r\n     * @param {string} messageType Supported message types can be found\r\n     * {@link https://w3c.github.io/encrypted-media/#idl-def-MediaKeyMessageType|here}.\r\n     * @class\r\n     */\r\n    constructor(sessionToken, message, defaultURL, messageType) {\r\n        this.sessionToken = sessionToken;\r\n        this.message = message;\r\n        this.defaultURL = defaultURL;\r\n        this.messageType = messageType ? messageType : 'license-request';\r\n    }\r\n}\r\n\r\nexport default KeyMessage;\r\n",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc Represents a 128-bit keyID and 128-bit encryption key\r\n * @ignore\r\n */\r\nclass KeyPair {\r\n    /**\r\n     * @param {string} keyID 128-bit key ID, base64 encoded, with no padding\r\n     * @param {string} key 128-bit encryption key, base64 encoded, with no padding\r\n     * @class\r\n     * @ignore\r\n     */\r\n    constructor(keyID, key) {\r\n        this.keyID = keyID;\r\n        this.key = key;\r\n    }\r\n}\r\n\r\nexport default KeyPair;\r\n",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc Creates a new key system access token.  Represents a valid key system for\r\n * given piece of content and key system requirements.  Used to initialize license\r\n * acquisition operations.\r\n * @ignore\r\n */\r\nclass KeySystemAccess {\r\n    /**\r\n     * @param {MediaPlayer.dependencies.protection.KeySystem} keySystem the key system\r\n     * @param {KeySystemConfiguration} ksConfiguration the\r\n     * subset of configurations passed to the key system access request that are supported\r\n     * by this user agent\r\n     * @class\r\n     * @ignore\r\n     */\r\n    constructor(keySystem, ksConfiguration) {\r\n        this.keySystem = keySystem;\r\n        this.ksConfiguration = ksConfiguration;\r\n    }\r\n}\r\n\r\nexport default KeySystemAccess;\r\n",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @classdesc Represents a set of configurations that describe the capabilities desired for\r\n *  support by a given CDM\r\n * @ignore\r\n */\r\nclass KeySystemConfiguration {\r\n    /**\r\n     * @param {Array.<MediaCapability>} audioCapabilities array of\r\n     * desired audio capabilities.  Higher preference capabilities should be placed earlier\r\n     * in the array.\r\n     * @param {Array.<MediaCapability>} videoCapabilities array of\r\n     * desired video capabilities.  Higher preference capabilities should be placed earlier\r\n     * in the array.\r\n     * @param {string} distinctiveIdentifier desired use of distinctive identifiers.\r\n     * One of \"required\", \"optional\", or \"not-allowed\"\r\n     * @param {string} persistentState desired support for persistent storage of\r\n     * key systems.  One of \"required\", \"optional\", or \"not-allowed\"\r\n     * @param {Array.<string>} sessionTypes List of session types that must\r\n     * be supported by the key system\r\n     * @class\r\n     */\r\n    constructor(audioCapabilities, videoCapabilities, distinctiveIdentifier, persistentState, sessionTypes) {\r\n        this.initDataTypes = [ 'cenc' ];\r\n        if (audioCapabilities && audioCapabilities.length) {\r\n            this.audioCapabilities = audioCapabilities;\r\n        }\r\n        if (videoCapabilities && videoCapabilities.length) {\r\n            this.videoCapabilities = videoCapabilities;\r\n        }\r\n        this.distinctiveIdentifier = distinctiveIdentifier;\r\n        this.persistentState = persistentState;\r\n        this.sessionTypes = sessionTypes;\r\n    }\r\n}\r\n\r\nexport default KeySystemConfiguration;\r\n",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc Defines a license request\r\n * @ignore\r\n */\r\nclass LicenseRequest {\r\n    /**\r\n     * Defines a license request\r\n     *\r\n     * @class\r\n     */\r\n    constructor(url, method, responseType, headers, withCredentials, messageType, sessionId, data) {\r\n\r\n        /**\r\n         * The license request url\r\n         */\r\n        this.url = url;\r\n\r\n        /**\r\n         * The HTTP method\r\n         */\r\n        this.method = method;\r\n\r\n        /**\r\n         * The HTTP response type\r\n         */\r\n        this.responseType = responseType;\r\n\r\n        /**\r\n         * The HTP request headers\r\n         */\r\n        this.headers = headers;\r\n\r\n        /**\r\n         * Wether request is done using credentials (cross-site cookies)\r\n         */\r\n        this.withCredentials = withCredentials;\r\n\r\n        /**\r\n         * The license request message type (see https://www.w3.org/TR/encrypted-media/#dom-mediakeymessagetype)\r\n         */\r\n        this.messageType = messageType;\r\n\r\n        /**\r\n         * The corresponding EME session ID\r\n         */\r\n        this.sessionId = sessionId;\r\n\r\n        /**\r\n         * The license request data\r\n         */\r\n        this.data = data;\r\n    }\r\n}\r\n\r\nexport default LicenseRequest;\r\n",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc Defines a license response\r\n */\r\nclass LicenseResponse {\r\n    /**\r\n     * Defines a license request\r\n     *\r\n     * @class\r\n     * @ignore\r\n     */\r\n    constructor(url, headers, data) {\r\n\r\n        /**\r\n         * The url that was loaded, that can be redirected from original request url\r\n         */\r\n        this.url = url;\r\n\r\n        /**\r\n         * The HTP response headers\r\n         */\r\n        this.headers = headers;\r\n\r\n        /**\r\n         * The license response data\r\n         */\r\n        this.data = data;\r\n    }\r\n}\r\n\r\nexport default LicenseResponse;\r\n",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc A media capability\r\n * @ignore\r\n */\r\nclass MediaCapability {\r\n    /**\r\n     * @param {string} contentType MIME type and codecs (RFC6386)\r\n     * @param {string} robustness\r\n     * @class\r\n     * @ignore\r\n     */\r\n    constructor(contentType, robustness) {\r\n        this.contentType = contentType;\r\n        this.robustness = robustness;\r\n    }\r\n}\r\n\r\nexport default MediaCapability;\r\n",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc NeedKey\r\n * @ignore\r\n */\r\nclass NeedKey {\r\n    /**\r\n     * @param {ArrayBuffer} initData the initialization data\r\n     * @param {string} initDataType initialization data type\r\n     * @class\r\n     */\r\n    constructor(initData, initDataType) {\r\n        this.initData = initData;\r\n        this.initDataType = initDataType;\r\n    }\r\n}\r\n\r\nexport default NeedKey;\r\n",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass DashJSError {\r\n    constructor(code, message, data) {\r\n        this.code = code || null;\r\n        this.message = message || null;\r\n        this.data = data || null;\r\n    }\r\n}\r\n\r\nexport default DashJSError;",
    "/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc This Object holds reference to the HTTPRequest for manifest, fragment and xlink loading.\r\n * Members which are not defined in ISO23009-1 Annex D should be prefixed by a _ so that they are ignored\r\n * by Metrics Reporting code.\r\n * @ignore\r\n */\r\nclass HTTPRequest {\r\n    /**\r\n     * @class\r\n     */\r\n    constructor() {\r\n        /**\r\n         * Identifier of the TCP connection on which the HTTP request was sent.\r\n         * @public\r\n         */\r\n        this.tcpid = null;\r\n        /**\r\n         * This is an optional parameter and should not be included in HTTP request/response transactions for progressive download.\r\n         * The type of the request:\r\n         * - MPD\r\n         * - XLink expansion\r\n         * - Initialization Fragment\r\n         * - Index Fragment\r\n         * - Media Fragment\r\n         * - Bitstream Switching Fragment\r\n         * - other\r\n         * @public\r\n         */\r\n        this.type = null;\r\n        /**\r\n         * The original URL (before any redirects or failures)\r\n         * @public\r\n         */\r\n        this.url = null;\r\n        /**\r\n         * The actual URL requested, if different from above\r\n         * @public\r\n         */\r\n        this.actualurl = null;\r\n        /**\r\n         * The contents of the byte-range-spec part of the HTTP Range header.\r\n         * @public\r\n         */\r\n        this.range = null;\r\n        /**\r\n         * Real-Time | The real time at which the request was sent.\r\n         * @public\r\n         */\r\n        this.trequest = null;\r\n        /**\r\n         * Real-Time | The real time at which the first byte of the response was received.\r\n         * @public\r\n         */\r\n        this.tresponse = null;\r\n        /**\r\n         * The HTTP response code.\r\n         * @public\r\n         */\r\n        this.responsecode = null;\r\n        /**\r\n         * The duration of the throughput trace intervals (ms), for successful requests only.\r\n         * @public\r\n         */\r\n        this.interval = null;\r\n        /**\r\n         * Throughput traces, for successful requests only.\r\n         * @public\r\n         */\r\n        this.trace = [];\r\n\r\n        /**\r\n         * Type of stream (\"audio\" | \"video\" etc..)\r\n         * @public\r\n         */\r\n        this._stream = null;\r\n        /**\r\n         * Real-Time | The real time at which the request finished.\r\n         * @public\r\n         */\r\n        this._tfinish = null;\r\n        /**\r\n         * The duration of the media requests, if available, in seconds.\r\n         * @public\r\n         */\r\n        this._mediaduration = null;\r\n        /**\r\n         * The media segment quality\r\n         * @public\r\n         */\r\n        this._quality = null;\r\n        /**\r\n         * all the response headers from request.\r\n         * @public\r\n         */\r\n        this._responseHeaders = null;\r\n        /**\r\n         * The selected service location for the request. string.\r\n         * @public\r\n         */\r\n        this._serviceLocation = null;\r\n    }\r\n}\r\n\r\n/**\r\n * @classdesc This Object holds reference to the progress of the HTTPRequest.\r\n * @ignore\r\n */\r\nclass HTTPRequestTrace {\r\n    /**\r\n    * @class\r\n    */\r\n    constructor() {\r\n        /**\r\n         * Real-Time | Measurement stream start.\r\n         * @public\r\n         */\r\n        this.s = null;\r\n        /**\r\n         * Measurement stream duration (ms).\r\n         * @public\r\n         */\r\n        this.d = null;\r\n        /**\r\n         * List of integers counting the bytes received in each trace interval within the measurement stream.\r\n         * @public\r\n         */\r\n        this.b = [];\r\n    }\r\n}\r\n\r\nHTTPRequest.GET = 'GET';\r\nHTTPRequest.HEAD = 'HEAD';\r\nHTTPRequest.MPD_TYPE = 'MPD';\r\nHTTPRequest.XLINK_EXPANSION_TYPE = 'XLinkExpansion';\r\nHTTPRequest.INIT_SEGMENT_TYPE = 'InitializationSegment';\r\nHTTPRequest.INDEX_SEGMENT_TYPE = 'IndexSegment';\r\nHTTPRequest.MEDIA_SEGMENT_TYPE = 'MediaSegment';\r\nHTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE = 'BitstreamSwitchingSegment';\r\nHTTPRequest.LICENSE = 'license';\r\nHTTPRequest.OTHER_TYPE = 'other';\r\n\r\nexport { HTTPRequest, HTTPRequestTrace };\r\n"
  ]
}